{"version":3,"file":"static/js/5463.fe3ce82a.chunk.js","mappings":"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","sources":["FrontOffice/RegistrationList/IpHandoverDetial.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../../OtManagement/OtManagement.css';\r\nimport axios from 'axios';\r\nimport ToastAlert from '../../OtherComponent/ToastContainer/ToastAlert';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst IpHandoverDetial = () => {\r\n\r\n  const Registeredit = useSelector(state => state.Frontoffice?.Registeredit);\r\n  const UrlLink = useSelector(state => state.userRecord?.UrlLink);\r\n  const toast = useSelector((state) => state.userRecord?.toast);\r\n  const UserData = useSelector((state) => state.userRecord?.UserData);\r\n  const [getdata, setgetdata] = useState(false)\r\n  const dispatchvalue = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [HandoverData, setHandoverData] = useState({\r\n    ReasonForAdmission: \"\",\r\n    PatientConditionOnAdmission: \"\",\r\n    PatientFileGiven: \"No\",\r\n    AadharGiven: \"No\",\r\n    getdata: false\r\n  })\r\n  const handleonchange = (e) => {\r\n    const { name, value } = e.target\r\n    setHandoverData((prev) => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  }\r\n  const handlesave = () => {\r\n    const exist = Object.keys(HandoverData).filter(p => !HandoverData[p])\r\n    if (exist.length === 0) {\r\n      const data = {\r\n        ...HandoverData,\r\n        RegistrationId: Registeredit?.RegistrationId,\r\n        created_by: UserData?.username\r\n      }\r\n      axios.post(`${UrlLink}Frontoffice/post_ip_handover_details`, data)\r\n        .then((res) => {\r\n          const resres = res.data;\r\n          let typp = Object.keys(resres)[0];\r\n          let mess = Object.values(resres)[0];\r\n          const tdata = {\r\n            message: mess,\r\n            type: typp,\r\n          };\r\n          setgetdata(prev => !prev)\r\n          dispatchvalue({ type: 'toast', value: tdata });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n\r\n        })\r\n    } else {\r\n      const tdata = {\r\n        message: `Please fill the detials : ${exist.join(',')}`,\r\n        type: 'warn',\r\n      };\r\n      dispatchvalue({ type: 'toast', value: tdata });\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(`${UrlLink}Frontoffice/post_ip_handover_details?RegistrationId=${Registeredit?.RegistrationId}`,)\r\n      .then((res) => {\r\n        const ress = res.data;\r\n        setHandoverData({\r\n          ReasonForAdmission: ress.ReasonForAdmission,\r\n          PatientConditionOnAdmission: ress.PatientConditionOnAdmission,\r\n          PatientFileGiven: ress.PatientFileGiven,\r\n          AadharGiven: ress.AadharGiven,\r\n          getdata: true\r\n        });\r\n\r\n      })\r\n      .catch((err) => {\r\n        setHandoverData({\r\n          ReasonForAdmission: \"\",\r\n          PatientConditionOnAdmission: \"\",\r\n          PatientFileGiven: \"No\",\r\n          AadharGiven: \"No\",\r\n          getdata: false\r\n        });\r\n        console.log(err);\r\n      });\r\n  }, [getdata, UrlLink, Registeredit])\r\n\r\n\r\n  const handleHandover = () => {\r\n    const data={\r\n      RegistrationId: Registeredit?.RegistrationId,\r\n      type:'Admit',\r\n      Reason:''\r\n    }\r\n    axios.post(`${UrlLink}Frontoffice/post_ip_submit_handover_or_cancel_details`, data)\r\n      .then((res) => {\r\n        const resres = res.data;\r\n        let typp = Object.keys(resres)[0];\r\n        let mess = Object.values(resres)[0];\r\n        const tdata = {\r\n          message: mess,\r\n          type: typp,\r\n        };\r\n        setgetdata(prev => !prev)\r\n        dispatchvalue({ type: 'toast', value: tdata });\r\n        dispatchvalue({ type: 'Registeredit', value: {}});\r\n        navigate('Home/IpHandoverQue')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"form-section5 handover_con\">\r\n        <div className=\"Otdoctor_intra_Con handover\">\r\n          {\r\n            Object.keys(HandoverData).filter(p => p !== 'getdata').map((field, indx) => (\r\n              <div className=\"text_adjust_mt_Ot\" key={indx}>\r\n                <label htmlFor={`${field}_${indx}`}>\r\n                  {\r\n                    field\r\n                  }\r\n                  <span>:</span>\r\n                </label>\r\n                {\r\n                  ['PatientFileGiven', 'AadharGiven'].includes(field) ? (\r\n                    <>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id={`${field}_yes`}\r\n                        name={field}\r\n                        value=\"Yes\"\r\n                        checked={HandoverData[field] === \"Yes\"}\r\n                        onChange={handleonchange}\r\n                      />\r\n                      <label htmlFor={`${field}_yes`}>Yes</label>\r\n\r\n                      <input\r\n                        type=\"radio\"\r\n                        id={`${field}_no`}\r\n                        name={field}\r\n                        value=\"No\"\r\n                        checked={HandoverData[field] === \"No\"}\r\n                        onChange={handleonchange}\r\n                      />\r\n                      <label htmlFor={`${field}_no`}>No</label>\r\n                    </>\r\n                  )\r\n                    :\r\n                    (\r\n                      <textarea\r\n                        id={`${field}_${indx}`}\r\n                        name={field}\r\n                        value={HandoverData[field]}\r\n                        onChange={handleonchange}\r\n                      />\r\n                    )\r\n                }\r\n              </div>\r\n            ))\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"Main_container_Btn\">\r\n        <button onClick={!HandoverData.getdata ? handlesave : handleHandover}>{!HandoverData.getdata ? 'save' : 'Hand Over'}</button>\r\n      </div>\r\n      <ToastAlert Message={toast.message} Type={toast.type} />\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IpHandoverDetial;"],"names":["IpHandoverDetial","Registeredit","useSelector","state","_state$Frontoffice","Frontoffice","UrlLink","_state$userRecord","userRecord","toast","_state$userRecord2","UserData","_state$userRecord3","getdata","setgetdata","useState","dispatchvalue","useDispatch","navigate","useNavigate","HandoverData","setHandoverData","ReasonForAdmission","PatientConditionOnAdmission","PatientFileGiven","AadharGiven","handleonchange","e","name","value","target","prev","useEffect","axios","get","concat","RegistrationId","then","res","ress","data","catch","err","console","log","_jsxs","_Fragment","children","_jsx","className","Object","keys","filter","p","map","field","indx","htmlFor","includes","type","id","checked","onChange","onClick","handleHandover","Reason","post","resres","typp","tdata","message","values","handlesave","exist","length","created_by","username","join","ToastAlert","Message","Type"],"sourceRoot":""}