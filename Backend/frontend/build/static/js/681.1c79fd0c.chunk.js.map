{"version":3,"file":"static/js/681.1c79fd0c.chunk.js","mappings":"sLAMA,MA4EA,EA5EoBA,KAClB,MAAMC,GAA4BC,EAAAA,EAAAA,KAAYC,IAAK,IAAAC,EAAA,OAAqB,QAArBA,EAAID,EAAME,mBAAW,IAAAD,OAAA,EAAjBA,EAAmBH,yBAAyB,IACnGK,QAAQC,IAAI,4BAA6BN,GACzC,MAAMO,GAAUN,EAAAA,EAAAA,KAAaC,IAAK,IAAAM,EAAA,OAAqB,QAArBA,EAAKN,EAAMO,kBAAU,IAAAD,OAAA,EAAhBA,EAAkBD,OAAO,IAC1DG,GAAgBC,EAAAA,EAAAA,MAChBC,GAAQX,EAAAA,EAAAA,KAAYC,IAAK,IAAAW,EAAA,OAAoB,QAApBA,EAAIX,EAAMO,kBAAU,IAAAI,OAAA,EAAhBA,EAAkBD,KAAK,IACpDH,GAAaR,EAAAA,EAAAA,KAAaC,IAAK,IAAAY,EAAA,OAAqB,QAArBA,EAAKZ,EAAMO,kBAAU,IAAAK,OAAA,EAAhBA,EAAkBC,QAAQ,IACtEV,QAAQC,IAAI,aAAcG,GAEtB,MAAOO,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAmCzC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qBAAoBD,SAAA,EACjCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC1BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2BAA0BD,SAAA,EACvCF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,WACCE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,UAEdE,EAAAA,EAAAA,KAAA,YACEC,GAAG,SACHC,KAAK,SACLC,MAAOV,EACPW,SA7CkBC,IAClB,MAAM,KAAEH,EAAI,MAAEC,GAAUE,EAAEC,OAC1BxB,QAAQC,IAAImB,EAAMC,EAAM,WAExBT,EAAWS,EAAO,UA8CxBH,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qBAAoBD,UAG9BE,EAAAA,EAAAA,KAAA,UAAQO,QA9CMC,KACjB1B,QAAQC,IAAI,SAASU,GACrB,MAAMgB,EAAW,CACfC,WAAqC,OAAzBjC,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BkC,UACvCC,gBAA2C,OAAzBnC,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BoC,GAC7CC,OAAQrB,EACRsB,WAAsB,OAAV7B,QAAU,IAAVA,OAAU,EAAVA,EAAY8B,UAE1BC,EAAAA,EAAMC,KAAK,GAADC,OAAInC,EAAO,qCAAqCyB,GACzDW,MAAKC,IACJ,MAAMC,EAAUD,EAASE,KACnBC,EAAOC,OAAOC,OAAOJ,GAAS,GAC9BK,EAAOF,OAAOG,KAAKN,GAAS,GAOlCnC,EAAc,CAAE0C,KAAM,QAAS1B,MALjB,CACV2B,QAASN,EACTK,KAAMF,KAIVjC,EAAU,GAAG,IAEhBqC,OAAOC,IACJlD,QAAQC,IAAIiD,EAAI,GAChB,EAsB+BlC,SAAC,gBAMpCE,EAAAA,EAAAA,KAACiC,EAAAA,EAAU,CAACC,QAAS7C,EAAMyC,QAASK,KAAM9C,EAAMwC,SAEnD,C","sources":["DoctorWorkBench/OpIpconnect.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'; \r\nimport { useDispatch } from 'react-redux';\r\nimport ToastAlert from '../OtherComponent/ToastContainer/ToastAlert';\r\n\r\nconst OpIpconnect = () => {\r\n  const DoctorWorkbenchNavigation = useSelector(state => state.Frontoffice?.DoctorWorkbenchNavigation);\r\n  console.log('DoctorWorkbenchNavigation', DoctorWorkbenchNavigation);\r\n  const UrlLink = useSelector((state) => state.userRecord?.UrlLink);\r\n  const dispatchvalue = useDispatch();\r\n  const toast = useSelector(state => state.userRecord?.toast);\r\n  const userRecord = useSelector((state) => state.userRecord?.UserData);\r\nconsole.log('userRecord', userRecord);\r\n\r\n    const [reason , setreason ] = useState('');\r\n  \r\n        const handleChange = (e) => {\r\n            const { name, value } = e.target;\r\n            console.log(name, value,'-------');\r\n            \r\n            setreason((value));\r\n          };\r\n \r\n    const handleSubmit = () =>{\r\n        console.log('reason',reason);\r\n        const postdata = {\r\n          Patient_id: DoctorWorkbenchNavigation?.PatientId,\r\n          Registration_id : DoctorWorkbenchNavigation?.pk,\r\n          Reason: reason,\r\n          Created_by: userRecord?.username\r\n        }\r\n        axios.post(`${UrlLink}Workbench/insert_op_ip_convertion`, postdata)\r\n        .then(response => {\r\n          const resData = response.data;\r\n          const mess = Object.values(resData)[0];\r\n          const typp = Object.keys(resData)[0];\r\n          // console.log('Patient Vital Details submitted successfully:', response.data);\r\n          const tdata = {\r\n              message: mess,\r\n              type: typp,\r\n          };\r\n\r\n          dispatchvalue({ type: 'toast', value: tdata });\r\n          setreason('')\r\n      })\r\n      .catch((err)=>{\r\n          console.log(err);\r\n        });\r\n    }\r\n  return (\r\n    <>\r\n    <div className=\"Main_container_app\">\r\n      <div className=\"appointment\">\r\n        <div className=\"treatcon_body_1 txtWidth\">\r\n          <label>\r\n           Reason <span>:</span>\r\n          </label>\r\n          <textarea\r\n            id='reason'\r\n            name='reason'\r\n            value={reason}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n      <div className=\"Main_container_Btn\">\r\n        \r\n        \r\n           <button onClick={handleSubmit}>Admit</button>\r\n    \r\n       </div>\r\n\r\n      </div>\r\n      \r\n      <ToastAlert Message={toast.message} Type={toast.type} />\r\n\r\n</>\r\n  )\r\n}\r\n\r\nexport default OpIpconnect"],"names":["OpIpconnect","DoctorWorkbenchNavigation","useSelector","state","_state$Frontoffice","Frontoffice","console","log","UrlLink","_state$userRecord","userRecord","dispatchvalue","useDispatch","toast","_state$userRecord2","_state$userRecord3","UserData","reason","setreason","useState","_jsxs","_Fragment","children","className","_jsx","id","name","value","onChange","e","target","onClick","handleSubmit","postdata","Patient_id","PatientId","Registration_id","pk","Reason","Created_by","username","axios","post","concat","then","response","resData","data","mess","Object","values","typp","keys","type","message","catch","err","ToastAlert","Message","Type"],"sourceRoot":""}