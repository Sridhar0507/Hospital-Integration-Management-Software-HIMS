{"version":3,"file":"static/js/3701.6cf39b0c.chunk.js","mappings":"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","sources":["DoctorWorkBench/Preview.js","DoctorWorkBench/NewProcedure.js","../node_modules/@mui/icons-material/Cameraswitch.js","../Webcam/webpack/universalModuleDefinition","../Webcam/webpack/bootstrap","../Webcam/src/react-webcam.tsx","../Webcam/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Preview.css\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport { useSelector } from \"react-redux\";\r\nimport jsPDF from \"jspdf\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nconst Preview = () => {\r\n  const [pdfBlob, setPdfBlob] = useState(null);\r\n\r\n  const userRecord = useSelector((state) => state.userRecord?.UserData);\r\n  const [doctorsign, har] = useState(null);\r\n  const formData = useSelector((state) => state.userRecord?.workbenchformData);\r\n  const urllink = useSelector((state) => state.userRecord?.UrlLink);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [isPrintButtonVisible, setIsPrintButtonVisible] = useState(true);\r\n  const [PreviewData, setPreviewData] = useState({});\r\n  const [ClinicDetails, setClinicDetails] = useState({});\r\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\r\n  const [selectedVital, setSelectedVital] = useState([]);\r\n  const [prescriptionData, setPrescriptionData] = useState([]);\r\n\r\n  const [clinicLogo, setClinicLogo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${urllink}usercontrol/getClinic?location=${userRecord?.location}`)\r\n\r\n      .then((response) => {\r\n        const record = response.data[0];\r\n        if (record) {\r\n          setClinicDetails(record);\r\n        } else {\r\n          console.error(\"No clinic details found\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n\r\n    axios\r\n      .get(`${urllink}usercontrol/getAccountsetting`)\r\n      .then((response) => {\r\n        if (response.data) {\r\n          const firstClinic = response.data;\r\n          setClinicLogo(`data:image/png;base64,${firstClinic.clinicLogo}`);\r\n        } else {\r\n          console.error(\"No record found\");\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data\"));\r\n  }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n  useEffect(() => {\r\n    const currentDate = new Date().toISOString().split(\"T\")[0];\r\n    setAppointmentDate(currentDate);\r\n    setSelectedDate(new Date(), \"Asia/Kolkata\");\r\n  }, []);\r\n\r\n  const currdate = selectedDate && format(selectedDate, \" dd / MM / yy\");\r\n\r\n  useEffect(() => {\r\n    const storedFormData = formData;\r\n    if (storedFormData) {\r\n      setPreviewData(storedFormData);\r\n    }\r\n  }, []);\r\n  // Empty dependency array ensures this effect runs only once\r\n\r\n  useEffect(() => {\r\n    if (\r\n      formData &&\r\n      formData.PatientID &&\r\n      formData.SerialNo &&\r\n      formData.visitNo\r\n    ) {\r\n      axios\r\n        .get(\r\n          `${urllink}doctorsworkbench/get_for_preview?PatientID=${formData?.PatientID}`\r\n        )\r\n        .then((response) => {\r\n          if (response.data && response.data.length > 0) {\r\n            const data = response.data;\r\n            console.log(data);\r\n            setSelectedVital(data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching data:\", error);\r\n        });\r\n\r\n      axios\r\n        .get(\r\n          `${urllink}doctorsworkbench/prescription_forpreview?PatientID=${formData.PatientID}&visitID=${formData.visitNo}`\r\n        )\r\n        .then((response) => {\r\n          if (response.data && response.data.length > 0) {\r\n            setPrescriptionData(response.data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching prescription data:\", error);\r\n        });\r\n    }\r\n  }, [formData.PatientID, formData, appointmentDate, formData.visitNo]);\r\n\r\n  useEffect(() => {\r\n    const doctorname = formData?.DoctorName;\r\n\r\n    if (doctorname) {\r\n      axios\r\n        .get(`${urllink}usercontrol/get_doctor_sign?doctorname=${doctorname}`)\r\n        .then((response) => {\r\n          const data = response.data;\r\n\r\n          har(data.doctor_sign);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching data:\", error);\r\n        });\r\n    }\r\n  }, [formData]);\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: () => document.getElementById(\"reactprintcontent\"),\r\n    onBeforePrint: () => {},\r\n    onAfterPrint: async () => {\r\n      setPdfBlob(null);\r\n    },\r\n    onAfterPrint: async () => {\r\n      setPdfBlob(null);\r\n\r\n      const printdata = document.getElementById(\"reactprintcontent\");\r\n\r\n      try {\r\n        if (printdata) {\r\n          const contentWidth = printdata.offsetWidth;\r\n          const padding = 20; // Adjust the padding as needed\r\n          const pdfWidth = contentWidth + 2 * padding; // Add padding to width\r\n          const pdfHeight = contentWidth * 1.5; // Add padding to height\r\n          const pdf = new jsPDF({\r\n            unit: \"px\",\r\n            format: [pdfWidth, pdfHeight],\r\n          });\r\n          pdf.html(printdata, {\r\n            x: padding, // Set x-coordinate for content\r\n            y: padding, // Set y-coordinate for content\r\n            callback: () => {\r\n              const generatedPdfBlob = pdf.output(\"blob\");\r\n              setPdfBlob(generatedPdfBlob);\r\n            },\r\n          });\r\n        } else {\r\n          throw new Error(\"Unable to get the target element\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error generating PDF:\", error);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"billing-invoice\" id=\"reactprintcontent\">\r\n      <br />\r\n      <div className=\"New_billlling_invoice_head\">\r\n        <div className=\"new_billing_logo_con\">\r\n          <img src={clinicLogo} alt=\"Medical logo\" />\r\n        </div>\r\n        <div className=\"new_billing_address_1 \">\r\n          <span className=\"dkjfiuw6\">{ClinicDetails.concern_name}</span>\r\n\r\n          <div>\r\n            <span className=\"dkjfiuw6\">\r\n              {ClinicDetails.door_no +\r\n                \",\" +\r\n                ClinicDetails.street +\r\n               \r\n                ClinicDetails.area +\r\n                \",\" +\r\n                ClinicDetails.city +\r\n                \",\" +\r\n                ClinicDetails.state +\r\n                \"-\" +\r\n                ClinicDetails.pincode}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"dkjfiuw6\">{ClinicDetails.phone_no + \" , \"}</span>\r\n\r\n            <span className=\"dkjfiuw6\">{ClinicDetails.email}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"Register_btn_con\"\r\n        style={{ color: \"var(--labelcolor)\", fontWeight: 600 }}\r\n      >\r\n        Patient Preview\r\n      </div>\r\n\r\n      <div className=\"new_billing_address\">\r\n        <div className=\"new_billing_address_2\">\r\n          <div className=\"new_preview_div\">\r\n            <label>\r\n              Patient Name <span>:</span>\r\n            </label>\r\n            <span className=\"dkjfiuw6\">\r\n              {selectedVital[0]?.Title} {selectedVital[0]?.FirstName}{\" \"}\r\n              {selectedVital[0]?.LastName}\r\n            </span>\r\n          </div>\r\n          <div className=\"new_preview_div\">\r\n            <label>\r\n              Patient ID <span>:</span>\r\n            </label>\r\n            <span className=\"dkjfiuw6\">{selectedVital[0]?.PatientID}</span>\r\n          </div>\r\n          <div className=\"new_preview_div\">\r\n            <label>\r\n              Age <span>:</span>\r\n            </label>\r\n            <span className=\"dkjfiuw6\">{selectedVital[0]?.Age}</span>\r\n          </div>\r\n          <div className=\"new_preview_div\">\r\n            <label>\r\n              Gender <span>:</span>\r\n            </label>\r\n            <span className=\"dkjfiuw6\">{selectedVital[0]?.Gender}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"new_billing_address_2\">\r\n          <div className=\"new_preview_div\">\r\n            <label>\r\n              Date <span>:</span>\r\n            </label>\r\n            <span className=\"dkjfiuw6\">{currdate}</span>\r\n          </div>\r\n          <div className=\"new_preview_div\">\r\n            <label>\r\n              Address <span>:</span>\r\n            </label>\r\n            <span className=\"dkjfiuw6\">\r\n              {selectedVital[0]?.City +\r\n                \",\" +\r\n                selectedVital[0]?.State +\r\n                \"-\" +\r\n                selectedVital[0]?.Pincode}\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"new_preview_div\">\r\n            <label>\r\n              {\" \"}\r\n              Patient Mobile No <span>:</span>\r\n            </label>\r\n            <span className=\"dkjfiuw6\">{selectedVital[0]?.PhoneNumber}</span>\r\n          </div>\r\n\r\n          {selectedVital.map((item, index) => (\r\n              <div className=\"new_preview_div\" key={index}>\r\n                {item.Next_Appointment && (\r\n                  <>\r\n                  <label>\r\n              Next Appointment <span>:</span>\r\n            </label>\r\n            <span className=\"dkjfiuw6\">\r\n              {item?.Next_Appointment}\r\n            </span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n\r\n         \r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"Register_btn_con\"\r\n        style={{ color: \"var(--labelcolor)\", fontWeight: 600 }}\r\n      >\r\n        Vital List\r\n      </div>\r\n      <div className=\"new_billing_invoice_detials\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Pulse</th>\r\n              <th>SPO2</th>\r\n              <th>Heart Rate</th>\r\n              <th>RR</th>\r\n              <th>SBP</th>\r\n              <th>DBP</th>\r\n              <th>Position</th>\r\n              <th>Part</th>\r\n              <th>Method</th>\r\n              <th>Weight(kg)</th>\r\n              <th>Height(cm)</th>\r\n              <th>HC (cm)</th>\r\n              <th>WC (cm)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{selectedVital[1]?.Pulse}</td>\r\n              <td>{selectedVital[1]?.SPO2}</td>\r\n              <td>{selectedVital[1]?.Heart_Rate}</td>\r\n              <td>{selectedVital[1]?.RR}</td>\r\n              <td>{selectedVital[1]?.SBP}</td>\r\n              <td>{selectedVital[1]?.DBP}</td>\r\n              <td>{selectedVital[1]?.Position}</td>\r\n              <td>{selectedVital[1]?.Part}</td>\r\n              <td>{selectedVital[1]?.Method}</td>\r\n              <td>{selectedVital[1]?.WeightKg}</td>\r\n              <td>{selectedVital[1]?.HeightCm}</td>\r\n              <td>{selectedVital[1]?.HCCm}</td>\r\n              <td>{selectedVital[1]?.WCCm}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div\r\n        className=\"new_billing_invoice_detials \"\r\n        style={{ paddingBottom: \"10px\" }}\r\n      ></div>\r\n      <div\r\n        className=\"Register_btn_con\"\r\n        style={{ color: \"var(--labelcolor)\", fontWeight: 600 }}\r\n      >\r\n        Prescription\r\n      </div>\r\n      <div className=\"new_billing_invoice_detials\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Generic Name</th>\r\n              <th>Item Name</th>\r\n\r\n              <th>Dose</th>\r\n              <th>Route</th>\r\n              <th>Frequency</th>\r\n              <th>Duration</th>\r\n              <th>Qty</th>\r\n              <th>Instruction</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {prescriptionData.map((medicine, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{medicine.GenericName}</td>\r\n                  <td>{medicine.ItemName}</td>\r\n\r\n                  <td>{medicine.Dose}</td>\r\n                  <td>{medicine.Route}</td>\r\n                  <td>{medicine.Frequency}</td>\r\n                  <td>{medicine.Duration}</td>\r\n                  <td>{medicine.Qty}</td>\r\n                  <td>{medicine.Instruction}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div\r\n        className=\"new_billing_invoice_detials \"\r\n        style={{ paddingBottom: \"10px\" }}\r\n      >\r\n        <br />\r\n        <div className=\"invoice_detials_total_1 neww_invoicedetials\">\r\n          <div className=\"total_con_bill\">\r\n            {selectedVital.map((item, index) => (\r\n              <div className=\"bill_body bill_body32\" key={index}>\r\n                {item.Diagnosis && (\r\n                  <>\r\n                    <label>\r\n                      Diagnosis <span>:</span>\r\n                    </label>\r\n                    <span className=\"dkjfiuw6\">{item.Diagnosis}</span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n\r\n            <br />\r\n            {selectedVital.map((item, index) => (\r\n              <div className=\"bill_body bill_body32\" key={index}>\r\n                {item.History && (\r\n                  <>\r\n                   <label>\r\n                {\" \"}\r\n                History <span>:</span>\r\n              </label>\r\n              <span className=\"dkjfiuw6\">{item?.History}</span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <br/>\r\n\r\n            {selectedVital.map((item, index) => (\r\n              <div className=\"bill_body bill_body32\" key={index}>\r\n                {item.Examination && (\r\n                  <>\r\n                  <label>\r\n                {\" \"}\r\n                Examination <span>:</span>\r\n              </label>\r\n              <span className=\"dkjfiuw6\">{item?.Examination}</span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n\r\n          \r\n            <br />\r\n            {selectedVital.map((item, index) => (\r\n              <div className=\"bill_body bill_body32\" key={index}>\r\n                {item.Treatment_Procedure && (\r\n                  <>\r\n                 <label>\r\n                {\" \"}\r\n                Treatment Procedure <span>:</span>\r\n              </label>\r\n              <span className=\"dkjfiuw6\">\r\n                {item?.Treatment_Procedure}\r\n              </span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"total_con_bill234\">\r\n        <div className=\"bill_body3233\">\r\n          <label>\r\n            Doctor Name <span>:</span>\r\n          </label>\r\n          <span className=\"dkjfiuw622\">{formData.DoctorName}</span>\r\n        </div>\r\n        <br />\r\n        <div className=\"bill_body3233\">\r\n          <label>\r\n            {\" \"}\r\n            Doctor sign <span>:</span>\r\n          </label>\r\n          <img\r\n            src={doctorsign}\r\n            alt=\"sign\"\r\n            style={{ width: \"130px\", height: \"40px\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {isPrintButtonVisible && (\r\n        <button\r\n          className=\"print_button\"\r\n          onClick={() => {\r\n            setTimeout(() => {\r\n              handlePrint();\r\n            }, 200);\r\n          }}\r\n        >\r\n          Print Data\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Webcam from \"react-webcam\";\r\nimport CameraswitchIcon from \"@mui/icons-material/Cameraswitch\";\r\nimport Preview from \"./Preview\";\r\nimport EditNoteIcon from \"@mui/icons-material/EditNote\";\r\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Modal from 'react-modal';\r\nimport Button from \"@mui/material/Button\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\n\r\n\r\nconst NewProcedure = () => {\r\n  const workbenchformData = useSelector(\r\n    (state) => state.userRecord?.workbenchformData\r\n  );\r\n  // console.log(\"workbenchformData\",workbenchformData);\r\n  const userRecord = useSelector((state) => state.userRecord?.UserData);\r\n  const urllink = useSelector((state) => state.userRecord?.UrlLink);\r\n  const [formValues, setFormValues] = useState({\r\n    Index: null,\r\n    DoctorName: \"\",\r\n    ProcedureName: \"\",\r\n    Sessions: \"\",\r\n    IsComplementry:\"\",\r\n    Complementry: \"\",\r\n    ComplementrySessions: \"\",\r\n    appointmentDate: \"\",\r\n    PatientID: \"\",\r\n    VisitID: \"\",\r\n    createdBy: \"\",\r\n    Status: \"Pending\",\r\n    branchlocation: \"\",\r\n    KitName: \"\",\r\n    ServiceType: \"Procedure\",\r\n  });\r\n\r\n\r\n  console.log(\"formValues\",formValues);\r\n\r\n\r\n  const [ProcedureName, setProcedureName] = useState([]);\r\n  const [ProcedureData, setProcedureData] = useState([]);\r\n  const [openModal2, setOpenModal2] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n  const isSidebarOpen = useSelector((state) => state.userRecord?.isSidebarOpen);\r\n  const [getprocedure, setgetprocedure] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [getStockid_Name,setgetStockid_Name]=useState([])\r\n\r\n\r\n  // ------------------------------------------\r\n\r\n  const [SelectedProcedure, setSelectedProcedure] = useState([]);\r\n\r\n\r\n  const [FormTreatprocedure, setFormTreatprocedure] = useState({\r\n    PatientID: \"\",\r\n    VisitID: \"\",\r\n    AppointmentDate: \"\",\r\n    TherapistName: \"\",\r\n    TreatmentProcedure: \"\",\r\n    NextAppointment: \"\",\r\n    Sessions: \"\",\r\n    CompletedSessions: \"\",\r\n    currentsession: \"\",\r\n    AdditionalComments: \"\",\r\n    GraftCount: \"\",\r\n    Complementry: \"\",\r\n  });\r\n\r\n\r\n  const [Ratecard, setRatecard] = useState({\r\n    RatecardType: \"\",\r\n    InsuranceName: \"\",\r\n    ClientName: \"\",\r\n  });\r\n\r\n  const [StatusSelectedProcedure, setStatusSelectedProcedure] = useState([]);\r\n  const [showCamera1, setShowCamera1] = useState(false);\r\n  const [isCameraImageCaptured1, setIsCameraImageCaptured1] = useState(false);\r\n  const [capturedImage1, setCapturedImage1] = useState(null);\r\n\r\n  const [showCamera2, setShowCamera2] = useState(false);\r\n  const [isCameraImageCaptured2, setIsCameraImageCaptured2] = useState(false);\r\n  const [capturedImage2, setCapturedImage2] = useState(null);\r\n  const webcamRef = useRef(null);\r\n  const [selectedFile1, setSelectedFile1] = useState(null);\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n\r\n  const [facingMode, setFacingMode] = useState(\"user\");\r\n  const devices = [\"iPhone\", \"iPad\", \"Android\", \"Mobile\", \"Tablet\", \"desktop\"];\r\n  const [IsmobileorNot, setIsmobileorNot] = useState(null);\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [openImageView, setopenImageView] = useState(false);\r\n  const [modalContent2, setModalContent2] = useState('');\r\n\r\n  const yourStyles={\r\n    position: 'absolute',\r\n    inset: '100px',\r\n    border: '1px solid rgb(204, 204, 204)',\r\n    background: 'rgb(97 90 90 / 75%)',\r\n    overflow: 'auto',\r\n    borderRadius: '4px',\r\n    outline: 'none',\r\n    padding: '0px'\r\n  }\r\n\r\n\r\n  const successMsg = (msg) => {\r\n    toast.success(`${msg}`, {\r\n      position: \"top-center\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      style: { marginTop: \"50px\" },\r\n    });\r\n  };\r\n  const userwarn = (warningMessage) => {\r\n    toast.warn(`${warningMessage}`, {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      style: { marginTop: \"50px\" },\r\n    });\r\n  };\r\n\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n    setModalContent2('');\r\n  };\r\n\r\n  const openModal = (content) => {\r\n    setModalContent(content);\r\n    setOpenModal2(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${urllink}doctorsworkbench/get_procedurename_fromratecard?location=${userRecord?.location}`\r\n      )\r\n      .then((response) => {\r\n        setProcedureName(response.data);\r\n\r\n        console.log(\"lololkkkk\",response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      DoctorName: workbenchformData?.DoctorName,\r\n      PatientID: workbenchformData?.PatientID,\r\n      createdBy: userRecord?.username,\r\n      VisitID: workbenchformData?.visitNo,\r\n      PatientID: workbenchformData?.PatientID,\r\n      branchlocation: userRecord?.location,\r\n    }));\r\n  }, [userRecord?.location]);\r\n\r\n\r\n  const getitemName =()=>{\r\n        const location = userRecord?.location;\r\n        const ItemType =\"KIT\"\r\n        axios\r\n          .get(`${urllink}doctorsworkbench/get_Medical_ProductMaster_data_forKit?location=${location}&ItemType=${ItemType}`)\r\n          .then((response) => {\r\n            setgetStockid_Name(response.data);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n        });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getitemName()\r\n  },[userRecord?.location])\r\n\r\n\r\n  const handleonchange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"ProcedureName\") {\r\n      const getSdata=ProcedureName.find((ele)=>ele.ProcedureName === value)\r\n\r\n      const AnsCond = getSdata?.isComplimentary ===\"True\"? \"Yes\":\"No\"\r\n      \r\n\r\n      if (value.split(\"-\")[0].includes(\"HT\")) {\r\n        setFormValues((prev) => ({\r\n          ...prev,\r\n          [name]: value,\r\n          Sessions:\"\",\r\n          IsComplementry:AnsCond,\r\n          Complementry: AnsCond ===\"Yes\"? getSdata?.ComplimentaryName : \"\",\r\n          ComplementrySessions:AnsCond ===\"Yes\"? getSdata?.SessenCounts : \"\",\r\n        }));\r\n      } else {\r\n        setFormValues((prev) => ({\r\n          ...prev,\r\n          [name]: value,\r\n          Sessions: 0,\r\n          IsComplementry:AnsCond,\r\n          Complementry: AnsCond ===\"Yes\"? getSdata?.ComplimentaryName : \"\",\r\n          ComplementrySessions:AnsCond ===\"Yes\"? getSdata?.SessenCounts : \"\",\r\n        }));\r\n      }\r\n    } \r\n    \r\n    else {\r\n      setFormValues((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  const Addprocedure = () => {\r\n    let requiredFields = [\"ProcedureName\",\"IsComplementry\"];\r\n    \r\n    if (formValues.IsComplementry === \"Yes\") {\r\n      requiredFields.push(\"Complementry\", \"ComplementrySessions\")\r\n    }else if (formValues.ProcedureName.split(\"-\")[0]?.includes(\"GFC\")) {\r\n      requiredFields.push(\"Sessions\", \"KitName\")\r\n    }else if (!formValues.ProcedureName.split(\"-\")[0]?.includes(\"HT\")) {\r\n      requiredFields.push(\"Sessions\")\r\n    }\r\n    \r\n\r\n    const existingItem = requiredFields.filter((field) => !formValues[field]);\r\n\r\n    if (existingItem.length === 0) {\r\n      const alreadyexist = ProcedureData.find(\r\n        (p) => p.ProcedureName === formValues.ProcedureName\r\n      );\r\n      const lengthval = ProcedureData.length + 1;\r\n      if (!alreadyexist) {\r\n        setProcedureData((prev) => [\r\n          ...prev,\r\n          { ...formValues, Index: lengthval },\r\n        ]);\r\n      } else {\r\n        alert(\"Procedure Already Exist\");\r\n      }\r\n      setFormValues((prev) => ({\r\n        ...prev,\r\n        Index: null,\r\n        ProcedureName: \"\",\r\n        Sessions: \"\",\r\n        Complementry: \"\",\r\n        IsComplementry:\"\",\r\n        Complementry:\"\",\r\n        ComplementrySessions:\"\",\r\n        appointmentDate: \"\",\r\n        Status: \"Pending\",\r\n        KitName: \"\",\r\n      }));\r\n    } else {\r\n      alert(`please fill the required fields : ${existingItem.join(\",\")}`);\r\n    }\r\n  };\r\n  const Updateprocedure = () => {\r\n    let requiredFields = [\"ProcedureName\",\"IsComplementry\"];\r\n    \r\n    if (formValues.IsComplementry === \"Yes\") {\r\n      requiredFields.push(\"Complementry\", \"ComplementrySessions\")\r\n    }else if (formValues.ProcedureName.split(\"-\")[0]?.includes(\"GFC\")) {\r\n      requiredFields.push(\"Sessions\", \"KitName\")\r\n    }else if (!formValues.ProcedureName.split(\"-\")[0]?.includes(\"HT\")) {\r\n      requiredFields.push(\"Sessions\")\r\n    }\r\n\r\n    const existingItem = requiredFields.filter((field) => !formValues[field]);\r\n\r\n    if (existingItem.length === 0) {\r\n      const updateddate = [...ProcedureData];\r\n      const indx = updateddate.findIndex((p) => p.Index === formValues.Index);\r\n\r\n      updateddate[indx] = { ...formValues };\r\n      setProcedureData(updateddate);\r\n      setFormValues((prev) => ({\r\n        ...prev,\r\n        Index: null,\r\n        ProcedureName: \"\",\r\n        Sessions: \"\",\r\n        Complementry: \"\",\r\n        IsComplementry:\"\",\r\n        Complementry:\"\",\r\n        ComplementrySessions:\"\",\r\n        appointmentDate: \"\",\r\n        Status: \"Pending\",\r\n        KitName: \"\",\r\n      }));\r\n    } else {\r\n      alert(`please fill the required fields : ${existingItem.join(\",\")}`);\r\n    }\r\n  };\r\n  const handleEdit = (client) => {\r\n    setFormValues({ ...client });\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleSave = () => {\r\n    \r\n    const procedure = ProcedureData.flatMap((p) => {\r\n      const additionalRows = [];\r\n\r\n      if (p.IsComplementry ===\"Yes\" ) {\r\n        // Create a new row for complementary procedure\r\n        // alert(\"hi\");\r\n        additionalRows.push({\r\n          ProcedureName: p.Complementry,\r\n          Therapist_Name: p.DoctorName,\r\n          Sessions: +p.ComplementrySessions,\r\n          appointmentDate: workbenchformData.AppointmentDate,\r\n          PatientID: workbenchformData.PatientID,\r\n          createdBy: userRecord?.username,\r\n          DoctorName: workbenchformData.DoctorName,\r\n          Status: p.Status,\r\n          VisitID: workbenchformData.visitNo,\r\n          branchlocation: userRecord?.location,\r\n          Complementry:p.IsComplementry,\r\n          KitName: p.KitName,\r\n        });\r\n      }\r\n\r\n      // Original row for the current procedure\r\n      return [\r\n        {\r\n          ProcedureName: p.ProcedureName,\r\n          Therapist_Name: p.DoctorName,\r\n          Sessions: +p.Sessions,\r\n          appointmentDate: workbenchformData.AppointmentDate,\r\n          PatientID: workbenchformData.PatientID,\r\n          createdBy: userRecord?.username,\r\n          DoctorName: workbenchformData.DoctorName,\r\n          Status: p.Status,\r\n          VisitID: workbenchformData.visitNo,\r\n          branchlocation: userRecord?.location,\r\n          Complementry:\"No\",\r\n          KitName: p.KitName,\r\n        },\r\n        ...additionalRows,\r\n      ];\r\n    });\r\n\r\n    console.log(procedure, \"----\");\r\n\r\n    axios\r\n      .post(`${urllink}doctorsworkbench/insert_procedure`, procedure)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data?.message) {\r\n          successMsg(response.data?.message);\r\n        } else if (response.data?.warn) {\r\n          userwarn(response.data?.warn);\r\n        }\r\n\r\n        setProcedureData([]);\r\n        setgetprocedure((prev) => !prev);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error saving data:\", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  // ---------------------------------------------------------------------\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${urllink}doctorsworkbench/get_current_session?Patientid=${workbenchformData?.PatientID}`\r\n      )\r\n      .then((res) => {\r\n        const data = res.data;\r\n        console.log(data, \"----\");\r\n        setSelectedProcedure(data || []);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [getprocedure, workbenchformData?.PatientID]);\r\n\r\n  const handleEdit1 = (client) => {\r\n    setFormTreatprocedure((prev) => ({\r\n      ...prev,\r\n      PatientID: client.PatientID,\r\n      VisitID: workbenchformData.visitNo,\r\n      AppointmentDate: client.AppointmentDate,\r\n      TherapistName: client.TherapistName,\r\n      TreatmentProcedure: client.Treatment_Procedure,\r\n      Sessions: client.Number_of_Sessions,\r\n      CompletedSessions: client.Number_of_Sessions_completed,\r\n      currentsession: client.current_session,\r\n      CreatedBy: userRecord?.username,\r\n      location: userRecord?.location,\r\n      Complementry: client?.Complementry,\r\n    }));\r\n  };\r\n\r\n  const handleonchange1 = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormTreatprocedure((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleInputFileChange1 = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile1(file);\r\n  };\r\n\r\n  const handleInputFileChange2 = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile2(file);\r\n  };\r\n\r\n\r\n  const handleOpenCamera = () => {\r\n    setShowCamera1(true);\r\n  };\r\n\r\n  const handleCloseCamera = () => {\r\n    setShowCamera1(false);\r\n  };\r\n  const handleHideCamera = () => {\r\n    setShowCamera1(false);\r\n  };\r\n  const handleRecaptureCameraImage = () => {\r\n    setCapturedImage1(null);\r\n    setIsCameraImageCaptured1(false);\r\n  };\r\n  const handlecaptureImage1 = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n\r\n    setCapturedImage1(imageSrc);\r\n    setIsCameraImageCaptured1(true);\r\n  };\r\n\r\n  const handleOpenCamera2 = () => {\r\n    setShowCamera2(true);\r\n  };\r\n\r\n  const handleCloseCamera2 = () => {\r\n    setShowCamera2(false);\r\n  };\r\n  const handleHideCamera2 = () => {\r\n    setShowCamera2(false);\r\n  };\r\n  const handleRecaptureCameraImage2 = () => {\r\n    setCapturedImage2(null);\r\n    setIsCameraImageCaptured2(false);\r\n  };\r\n  const handlecaptureImage2 = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n\r\n    setCapturedImage2(imageSrc);\r\n    setIsCameraImageCaptured2(true);\r\n  };\r\n\r\n\r\n  const videoConstraints = {\r\n    facingMode: facingMode,\r\n  };\r\n\r\n  const switchCamera = () => {\r\n    setFacingMode((prevMode) => (prevMode === \"user\" ? \"environment\" : \"user\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${urllink}doctorsworkbench/get_procedurestatus?Patientid=${workbenchformData?.PatientID}`\r\n      )\r\n      .then((res) => {\r\n        const data = res.data;\r\n        console.log(data, \"----uuuu\");\r\n        setStatusSelectedProcedure(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [workbenchformData?.PatientID]);\r\n\r\n  const dataURItoBlob = (dataURI) => {\r\n    const byteString = atob(dataURI.split(\",\")[1]);\r\n    const mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\r\n    const ab = new ArrayBuffer(byteString.length);\r\n    const ia = new Uint8Array(ab);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([ab], { type: mimeString });\r\n  };\r\n\r\n  const handleSave1 = () => {\r\n    const dataToSend = {\r\n      ...FormTreatprocedure,\r\n      ServiceType: \"Procedure\",\r\n      beforecapturedImage: capturedImage1 ? dataURItoBlob(capturedImage1): selectedFile1,\r\n      aftercapturedImage: capturedImage2 ? dataURItoBlob(capturedImage2) : selectedFile2,\r\n      CreatedBy: userRecord?.username,\r\n      location: userRecord?.location,\r\n      // VisitID: workbenchformData.VisitID,\r\n    };\r\n\r\n    console.log(dataToSend);\r\n    const BackformData = new FormData();\r\n\r\n    for (const key in dataToSend) {\r\n      if (dataToSend.hasOwnProperty(key)) {\r\n        BackformData.append(key, dataToSend[key]);\r\n      }\r\n    }\r\n    let arr = [\"NextAppointment\"];\r\n    if (FormTreatprocedure.TreatmentProcedure.split(\"-\")[0].includes(\"HT\")) {\r\n      arr = [\"NextAppointment\", \"GraftCount\"];\r\n    }\r\n    const exist = arr.filter((p) => !FormTreatprocedure[p]);\r\n    if (exist.length > 0) {\r\n      userwarn(`please fill allthe fields : ${exist.join(\",\")}`);\r\n    } else {\r\n      axios\r\n        .post(\r\n          `${urllink}doctorsworkbench/insert_therapist_procedure`,\r\n          BackformData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res, \"-=-=-=-=-=-=-\");\r\n          if (dataToSend?.Complementry === \"No\") {\r\n            let billingdata = {\r\n              PatientID: workbenchformData?.PatientID,\r\n              PatientName: `${workbenchformData?.firstName} ${workbenchformData?.lastName}`,\r\n              VisitID: workbenchformData?.visitNo,\r\n              ServiceType: \"Procedure\",\r\n              DoctorName: workbenchformData?.DoctorName,\r\n              ProcedureName: FormTreatprocedure?.TreatmentProcedure,\r\n              appointmentDate: workbenchformData?.AppointmentDate,\r\n              Sessions: FormTreatprocedure?.currentsession,\r\n              Unit: parseInt(FormTreatprocedure?.GraftCount) || 0,\r\n              Amount: 0,\r\n              Discount: 0,\r\n              Gstcharge: 0,\r\n              TotalAmount: 0,\r\n              Status: \"Pending\",\r\n              location: userRecord?.location,\r\n              CreatedBy: userRecord?.username,\r\n            };\r\n\r\n            let urlval = \"get_RateCard_Service_Charge\";\r\n            let ratecardType = Ratecard.RatecardType;\r\n\r\n            if (Ratecard.RatecardType === \"Insurance\") {\r\n              urlval = \"get_RateCard_Insurance_Charge\";\r\n              ratecardType = Ratecard.InsuranceName;\r\n            }\r\n            if (Ratecard.RatecardType === \"Client\") {\r\n              urlval = \"get_RateCard_client_Charge\";\r\n              ratecardType = Ratecard.ClientName;\r\n            }\r\n\r\n            const fetchAndPostBillingData = async () => {\r\n              try {\r\n                const response = await axios.get(\r\n                  `${urllink}usercontrol/${urlval}?servicetype=Procedure&servicename=${FormTreatprocedure.TreatmentProcedure}&ratecardtype=${ratecardType}&location=${userRecord?.location}`\r\n                );\r\n\r\n                const data = response.data.data[0];\r\n                console.log(response.data);\r\n\r\n                if (data?.Charge) {\r\n                  billingdata[\"Amount\"] = parseFloat(data.Charge) || 0;\r\n                  billingdata[\"Gstcharge\"] = parseFloat(data.GstCharge) || 0;\r\n                  billingdata[\"TotalAmount\"] =\r\n                    parseFloat(data.Charge) * parseFloat(billingdata.Unit) || 0;\r\n                }\r\n\r\n                const ProcedureData = [{ ...billingdata }];\r\n                const postResponse = await axios.post(\r\n                  `${urllink}GeneralBilling/insertGeneral_Billing_Data`,\r\n                  ProcedureData\r\n                );\r\n\r\n                console.log(postResponse, \"=====\");\r\n              } catch (error) {\r\n                console.error(\r\n                  \"Error in fetching and posting billing data:\",\r\n                  error\r\n                );\r\n              }\r\n            };\r\n\r\n            fetchAndPostBillingData();\r\n          }\r\n\r\n          setgetprocedure((prev) => !prev);\r\n          setFormTreatprocedure({\r\n            PatientID: \"\",\r\n            VisitID: \"\",\r\n            AppointmentDate: \"\",\r\n            TherapistName: \"\",\r\n            TreatmentProcedure: \"\",\r\n            NextAppointment: \"\",\r\n            Sessions: \"\",\r\n            CompletedSessions: \"\",\r\n            currentsession: \"\",\r\n            AdditionalComments: \"\",\r\n          });\r\n          setCapturedImage1(null);\r\n          setCapturedImage2(null);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n\r\n      const shouldProceed = window.confirm(\"Do you Complete Procedure?\");\r\n      const statuss = shouldProceed ? \"Yes\" : \"No\";\r\n\r\n      if (statuss === \"Yes\") {\r\n        // User clicked \"OK\"\r\n        navigate(\"/Home/Treament-QueueList\");\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return(\r\n     <>\r\n     <div className=\"Add_items_Purchase_Master\">\r\n      <span>Add Procedures</span>\r\n    </div>\r\n    <div className=\"new-patient-registration-form\">\r\n    <div className=\"RegisFormcon\" style={{ justifyContent: \"center\" }}>\r\n      \r\n      <div className=\"RegisForm_1\">\r\n        <label htmlFor=\"ProcedureName\">\r\n          Treatment Procedure<span>:</span>\r\n        </label>\r\n        <select\r\n          id=\"ProcedureName\"\r\n          name=\"ProcedureName\"\r\n          value={formValues.ProcedureName}\r\n          onChange={handleonchange}\r\n        >\r\n          <option value=\"\">Select </option>\r\n          {Array.isArray(ProcedureName) ? (\r\n            ProcedureName.map((procedure, index) => (\r\n              <option key={index} value={procedure.ProcedureName}>\r\n                {procedure.ProcedureName}\r\n              </option>\r\n            ))\r\n          ) : (\r\n            <option disabled>No procedure available</option>\r\n          )}\r\n        </select>\r\n      </div>\r\n      \r\n      {!formValues.ProcedureName.split(\"-\")[0]?.includes(\"HT\") &&\r\n        <div className=\"RegisForm_1\">\r\n        <label htmlFor=\"Sessions\">\r\n          Numberof Sessions<span>:</span>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"Sessions\"\r\n          name=\"Sessions\"\r\n          value={formValues.Sessions}\r\n          onChange={handleonchange}\r\n        />\r\n      </div>}\r\n\r\n      {formValues.IsComplementry === \"Yes\" && (\r\n        <>\r\n        <div className=\"RegisForm_1\">\r\n          <label htmlFor=\"ConsultancyDiscount\">\r\n            Complementary<span>:</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"ConsultancyDiscount\"\r\n            name=\"Complementry\"\r\n            value={formValues.Complementry}\r\n            onChange={handleonchange}\r\n          />\r\n        </div>\r\n        <div className=\"RegisForm_1\">\r\n        <label htmlFor=\"ConsultancyDiscount\">\r\n          Complementary Sessions<span>:</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"ComplementrySessions\"\r\n          value={formValues.ComplementrySessions}\r\n          onChange={handleonchange}\r\n        />\r\n      </div>\r\n      </>\r\n      )}\r\n\r\n      {formValues.ProcedureName.split(\"-\")[0]?.includes(\"GFC\") && (\r\n        <div className=\"RegisForm_1\">\r\n          <label htmlFor=\"ConsultancyDiscount\">\r\n            GFC Kit Name<span>:</span>\r\n          </label>\r\n          <input\r\n            list=\"Kitbrowsers\"\r\n            type=\"text\"\r\n            id=\"KitName\"\r\n            name=\"KitName\"\r\n            value={formValues.KitName}\r\n            onChange={handleonchange}\r\n          />\r\n           <datalist id=\"Kitbrowsers\">\r\n          {getStockid_Name.map((item, index) => (\r\n            <option\r\n              key={index}\r\n              value={item.ItemName}\r\n            >\r\n              {item.ItemName}\r\n            </option>\r\n          ))}\r\n        </datalist>\r\n        </div>\r\n      )}\r\n      \r\n      <button\r\n        className=\"RegisterForm_1_btns\"\r\n        onClick={\r\n          formValues.Index !== null ? Updateprocedure : Addprocedure\r\n        }\r\n      >\r\n        {formValues.Index !== null ? \"Update\" : \"Add\"}\r\n      </button>\r\n      \r\n\r\n    </div>\r\n    <br/>\r\n    \r\n    {ProcedureData.length > 0 && (\r\n      <div className=\"Selected-table-container\">\r\n        <table className=\"selected-medicine-table2\">\r\n          <thead>\r\n            <tr>\r\n              <th>S No</th>\r\n              <th>Service Type</th>\r\n              <th>Therapist Name</th>\r\n              <th>Procedure Name</th>\r\n              <th>Sessions</th>\r\n              <th>Is Complementry</th>\r\n              <th>Complementry</th>\r\n              <th>Complementry <br/>Sessions</th>\r\n              <th>Kit Name</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ProcedureData.map((client, index) => (\r\n              <tr key={index}>\r\n                <td>{client.Index}</td>\r\n                <td>{client.ServiceType}</td>\r\n                <td>{client.DoctorName}</td>\r\n                <td>{client.ProcedureName}</td>\r\n                <td>{client.Sessions || \"-\"}</td>\r\n                <td>{client.IsComplementry}</td>\r\n                <td>{client.Complementry || \"-\"}</td>\r\n                <td>{client.ComplementrySessions || \"-\"}</td>\r\n                <td>{client.KitName || \"-\"}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"delnamebtn\"\r\n                    onClick={() => handleEdit(client)}\r\n                  >\r\n                    <EditNoteIcon />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )}\r\n    \r\n    <br/>\r\n    \r\n    {ProcedureData.length > 0 && (\r\n      <div className=\"Register_btn_con\">\r\n        <button className=\"RegisterForm_1_btns\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n        <button\r\n          onClick={() => openModal(\"calendar\")}\r\n          className=\"RegisterForm_1_btns\"\r\n        >\r\n          preview\r\n        </button>\r\n      </div>\r\n    )}\r\n    \r\n    {openModal2 && (\r\n      <div\r\n        className={\r\n          isSidebarOpen\r\n            ? \"sideopen_showcamera_profile\"\r\n            : \"showcamera_profile\"\r\n        }\r\n        onClick={() => {\r\n          setOpenModal2(false);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"newwProfiles newwPopupforreason\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <Preview modalContent={modalContent} />\r\n          <div className=\"Register_btn_con\">\r\n            <button\r\n              className=\"RegisterForm_1_btns\"\r\n              onClick={() => {\r\n                setOpenModal2(false);\r\n              }}\r\n            >\r\n              <HighlightOffIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n    </div>\r\n\r\n{/* -------------------------------------------------Current Therapy List------------------------------------------------------------------------------------ */}\r\n    \r\n    \r\n    {SelectedProcedure.length > 0 && <div className=\"Add_items_Purchase_Master\">\r\n      <span>Current Therapy List</span>\r\n    </div>}\r\n\r\n    {SelectedProcedure.length > 0 && (\r\n            <div className=\"Selected-table-container\">\r\n              <table className=\"selected-medicine-table2\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>S No</th>\r\n                    <th>Visit Id</th>\r\n                    <th>Therapist Name</th>\r\n                    <th>Procedure Name</th>\r\n                    <th>Sessions</th>\r\n                    <th>Sessions Completed</th>\r\n                    <th>Current Session</th>\r\n                    <th>Complementry</th>\r\n                    <th>Kit Name</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {SelectedProcedure.map((client, index) => (\r\n                    <tr key={index}>\r\n                      <td>{client.ProcedureID}</td>\r\n                      <td>{client.VisitID}</td>\r\n                      <td>{client.TherapistName}</td>\r\n                      <td>{client.Treatment_Procedure}</td>\r\n                      <td>{client.Number_of_Sessions}</td>\r\n                      <td>{client.Number_of_Sessions_completed}</td>\r\n                      <td>{client.current_session}</td>\r\n                      <td>{client.Complementry || \"-\"}</td>\r\n                      <td>{client.KitName || \"-\"}</td>\r\n                      <td>{client.Status}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"delnamebtn\"\r\n                          onClick={() => handleEdit1(client)}\r\n                        >\r\n                          <EditNoteIcon />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n\r\n          <br/>\r\n          <div className=\"RegisFormcon\" style={{ justifyContent: \"center\" }}>\r\n            <div className=\"RegisForm_1\">\r\n              <label htmlFor=\"TreatmentProcedure\">\r\n                Procedure Name<span>:</span>\r\n              </label>\r\n              <input\r\n                type=\"TreatmentProcedure\"\r\n                id=\"TreatmentProcedure\"\r\n                name=\"TreatmentProcedure\"\r\n                readOnly\r\n                value={FormTreatprocedure.TreatmentProcedure}\r\n                onChange={handleonchange1}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"RegisForm_1\">\r\n              <label htmlFor=\"Sessions\">\r\n                Sessions<span>:</span>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"Sessions\"\r\n                name=\"Sessions\"\r\n                readOnly\r\n                value={FormTreatprocedure.Sessions}\r\n                onChange={handleonchange1}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"RegisForm_1\">\r\n              <label htmlFor=\"CompletedSessions\">\r\n                Completed Sessions<span>:</span>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"CompletedSessions\"\r\n                name=\"CompletedSessions\"\r\n                readOnly\r\n                value={FormTreatprocedure.CompletedSessions}\r\n                onChange={handleonchange1}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"RegisForm_1\">\r\n              <label htmlFor=\"currentsession\">\r\n                Current Sessions<span>:</span>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"currentsession\"\r\n                name=\"currentsession\"\r\n                readOnly\r\n                value={FormTreatprocedure.currentsession}\r\n                onChange={handleonchange1}\r\n              />\r\n            </div>\r\n\r\n            {FormTreatprocedure.TreatmentProcedure.split(\"-\")[0].includes(\r\n              \"HT\"\r\n            ) && (\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"GraftCount\">\r\n                    Graft Count<span>:</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"GraftCount\"\r\n                    name=\"GraftCount\"\r\n                    value={FormTreatprocedure.GraftCount}\r\n                    onChange={handleonchange1}\r\n                  />\r\n                </div>\r\n              )}\r\n            <div className=\"RegisForm_1\">\r\n              <label htmlFor=\"patientPhoto\">\r\n                Before Treatment<span>:</span>\r\n              </label>\r\n              <div className=\"file-input-444\">\r\n                <div className=\"RegisterForm_2\">\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"CapturedFile\"\r\n                    name=\"CapturedFile\"\r\n                    accept=\"image/*\"  // Ensure this is correct if you want images and not pdf\r\n                    onChange={handleInputFileChange1}\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                  <label\r\n                    htmlFor=\"CapturedFile\"\r\n                    className=\"RegisterForm_1_btns choose_file_update\"\r\n                  >\r\n                    Choose File\r\n                  </label>\r\n                  <button\r\n                    onClick={handleOpenCamera}\r\n                    className=\"RegisterForm_1_btns choose_file_update\"\r\n                  >\r\n                    Take Pic\r\n                  </button>\r\n\r\n                  {showCamera1 && (\r\n                    <div\r\n                      className={\r\n                        isSidebarOpen ? \"sideopen_showcamera\" : \"showcamera\"\r\n                      }\r\n                      onClick={handleHideCamera}\r\n                    >\r\n                      <div\r\n                        className={\r\n                          isSidebarOpen\r\n                            ? \"sideopen_showcamera_1\"\r\n                            : \"showcamera_1\"\r\n                        }\r\n                        onClick={(e) => e.stopPropagation()}\r\n                      >\r\n                        {isCameraImageCaptured1 ? ( // Display the captured camera image\r\n                          <img\r\n                            src={capturedImage1}\r\n                            alt=\"captured\"\r\n                            className=\"captured-image11\"\r\n                          />\r\n                        ) : (\r\n                          <div className=\"camera-container\">\r\n                            <div className=\"web_head\">\r\n                              <h3>Image</h3>\r\n                            </div>\r\n                            <br></br>\r\n                            <div className=\"RotateButton_canva\">\r\n                              <Webcam\r\n                                audio={false}\r\n                                ref={webcamRef}\r\n                                screenshotFormat=\"image/jpeg\"\r\n                                mirrored={facingMode === \"user\"}\r\n                                className=\"web_cam\"\r\n                                videoConstraints={videoConstraints}\r\n                              />\r\n                              <div className=\"web_cam__1\">\r\n                                <button onClick={switchCamera}>\r\n                                  <CameraswitchIcon />\r\n                                </button>\r\n                              </div>\r\n\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        <div className=\"web_btn\">\r\n                          {isCameraImageCaptured1 ? ( // Render the Recapture button if a camera image is captured\r\n                            <button\r\n                              onClick={handleRecaptureCameraImage}\r\n                              className=\"btncon_add\"\r\n                            >\r\n                              Recapture\r\n                            </button>\r\n                          ) : (\r\n                            <button\r\n                              onClick={handlecaptureImage1}\r\n                              className=\"btncon_add\"\r\n                            >\r\n                              Capture\r\n                            </button>\r\n                          )}\r\n                          <button\r\n                            onClick={handleCloseCamera}\r\n                            className=\"btncon_add\"\r\n                          >\r\n                            Close\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"RegisForm_1\">\r\n              <label htmlFor=\"patientPhoto\">\r\n                After Treatment<span>:</span>\r\n              </label>\r\n              <div className=\"file-input-444\">\r\n                <div className=\"RegisterForm_2\">\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"CapturedFile\"\r\n                    name=\"CapturedFile\"\r\n                    accept=\"image/*\"  // Ensure this is correct if you want images and not pdf\r\n                    onChange={handleInputFileChange2}\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                  <label\r\n                    htmlFor=\"CapturedFile\"\r\n                    className=\"RegisterForm_1_btns choose_file_update\"\r\n                  >\r\n                    Choose File\r\n                  </label>\r\n                  <button\r\n                    onClick={handleOpenCamera2}\r\n                    className=\"RegisterForm_1_btns choose_file_update\"\r\n                  >\r\n                    Take Pic\r\n                  </button>\r\n                  {showCamera2 && (\r\n                    <div\r\n                      className={\r\n                        isSidebarOpen ? \"sideopen_showcamera\" : \"showcamera\"\r\n                      }\r\n                      onClick={handleHideCamera2}\r\n                    >\r\n                      <div\r\n                        className={\r\n                          isSidebarOpen\r\n                            ? \"sideopen_showcamera_1\"\r\n                            : \"showcamera_1\"\r\n                        }\r\n                        onClick={(e) => e.stopPropagation()}\r\n                      >\r\n                        {isCameraImageCaptured2 ? ( // Display the captured camera image\r\n                          <img\r\n                            src={capturedImage2}\r\n                            alt=\"captured\"\r\n                            className=\"captured-image11\"\r\n                          />\r\n                        ) : (\r\n                          <div className=\"camera-container\">\r\n                            <div className=\"web_head\">\r\n                              <h3>Image</h3>\r\n                            </div>\r\n                            <br></br>\r\n                            <div className=\"RotateButton_canva\">\r\n                              <Webcam\r\n                                audio={false}\r\n                                ref={webcamRef}\r\n                                screenshotFormat=\"image/jpeg\"\r\n                                mirrored={facingMode === \"user\"}\r\n                                className=\"web_cam\"\r\n                                videoConstraints={videoConstraints}\r\n                              />\r\n                              <div className=\"web_cam__1\">\r\n                                <button onClick={switchCamera}>\r\n                                  <CameraswitchIcon />\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        <div className=\"web_btn\">\r\n                          {isCameraImageCaptured2 ? (\r\n                            <button\r\n                              onClick={handleRecaptureCameraImage2}\r\n                              className=\"btncon_add\"\r\n                            >\r\n                              Recapture\r\n                            </button>\r\n                          ) : (\r\n                            <button\r\n                              onClick={handlecaptureImage2}\r\n                              className=\"RegisterForm_1_btns\"\r\n                            >\r\n                              Capture\r\n                            </button>\r\n                          )}\r\n                          <button\r\n                            onClick={handleCloseCamera2}\r\n                            className=\"RegisterForm_1_btns\"\r\n                          >\r\n                            Close\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisForm_1\">\r\n              <label htmlFor=\"AdditionalComments\">\r\n                Additional Comments<span>:</span>\r\n              </label>\r\n              <textarea\r\n                id=\"AdditionalComments\"\r\n                name=\"AdditionalComments\"\r\n                value={FormTreatprocedure.AdditionalComments}\r\n                onChange={handleonchange1}\r\n              />\r\n            </div>\r\n            <div className=\"RegisForm_1\">\r\n              <label htmlFor=\"NextAppointment\">\r\n                Next Appointment<span>:</span>\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"NextAppointment\"\r\n                name=\"NextAppointment\"\r\n                value={FormTreatprocedure.NextAppointment}\r\n                onChange={handleonchange1}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className=\"Register_btn_con\">\r\n            <button className=\"RegisterForm_1_btns\" onClick={handleSave1}>\r\n              Save\r\n            </button>\r\n          </div>\r\n          <ToastContainer />\r\n        <Modal isOpen={modalIsOpen} onRequestClose={closeModal}style={{ content: { ...yourStyles } }}>\r\n          <div className=\"pdf_img_show\">\r\n            {modalContent.toLowerCase().startsWith(\"data:application/pdf;base64,\") ? (\r\n              <iframe\r\n                title=\"PDF Viewer\"\r\n                src={modalContent2}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"435px\",\r\n                  border: \"1px solid rgba(0, 0, 0, 0.5)\", // Black border with reduced opacity\r\n                }}\r\n              />\r\n            ) : (\r\n              <img\r\n                src={modalContent2}\r\n                alt=\"Concern Form\"\r\n                style={{\r\n                  width: \"80%\",\r\n                  height: \"75%\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              />\r\n            )}\r\n            <div className=\"jhuhhjh\">\r\n              <Button\r\n                style={{ color: \"white\" }}\r\n                className=\"clse_pdf_img\"\r\n                onClick={closeModal}\r\n              >\r\n                <HighlightOffIcon\r\n                  style={{\r\n                    fontSize: \"40px\",\r\n                    backgroundColor: \"#54d854bf\",\r\n                    borderRadius: \"40px\",\r\n                  }}\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n    </>\r\n)\r\n}\r\n\r\nexport default NewProcedure;\r\n\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 7h-1l-1-1h-4L9 7H8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2m-4 7c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m8.57.51 4.48 4.48V2.04c4.72.47 8.48 4.23 8.95 8.95h2C23.34 3.02 15.49-1.59 8.57.51m2.38 21.45c-4.72-.47-8.48-4.23-8.95-8.95H0c.66 7.97 8.51 12.58 15.43 10.48l-4.48-4.48z\"\n}, \"1\")], 'Cameraswitch');","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Webcam\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Webcam\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_react__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/react-webcam.tsx\");\n","import * as React from \"react\";\n\n// polyfill based on https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n(function polyfillGetUserMedia() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Older browsers might not implement mediaDevices at all, so we set an empty object first\n  if (navigator.mediaDevices === undefined) {\n    (navigator as any).mediaDevices = {};\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n  if (navigator.mediaDevices.getUserMedia === undefined) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      // First get ahold of the legacy getUserMedia, if present\n      const getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia;\n\n      // Some browsers just don't implement it - return a rejected promise with an error\n      // to keep a consistent interface\n      if (!getUserMedia) {\n        return Promise.reject(\n          new Error(\"getUserMedia is not implemented in this browser\")\n        );\n      }\n\n      // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n      return new Promise(function(resolve, reject) {\n        getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n    };\n  }\n})();\n\nfunction hasGetUserMedia() {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n}\n\ninterface ScreenshotDimensions {\n  width: number;\n  height: number;\n}\n\ninterface ChildrenProps {\n  getScreenshot: (screenshotDimensions?: ScreenshotDimensions) => string | null;\n}\n\nexport type WebcamProps = Omit<React.HTMLProps<HTMLVideoElement>, \"ref\"> & {\n  audio: boolean;\n  audioConstraints?: MediaStreamConstraints[\"audio\"];\n  disablePictureInPicture: boolean;\n  forceScreenshotSourceSize: boolean;\n  imageSmoothing: boolean;\n  mirrored: boolean;\n  minScreenshotHeight?: number;\n  minScreenshotWidth?: number;\n  onUserMedia: (stream: MediaStream) => void;\n  onUserMediaError: (error: string | DOMException) => void;\n  screenshotFormat: \"image/webp\" | \"image/png\" | \"image/jpeg\";\n  screenshotQuality: number;\n  videoConstraints?: MediaStreamConstraints[\"video\"];\n  children?: (childrenProps: ChildrenProps) => JSX.Element;\n}\n\ninterface WebcamState {\n  hasUserMedia: boolean;\n  src?: string;\n}\n\nexport default class Webcam extends React.Component<WebcamProps, WebcamState> {\n  static defaultProps = {\n    audio: false,\n    disablePictureInPicture: false,\n    forceScreenshotSourceSize: false,\n    imageSmoothing: true,\n    mirrored: false,\n    onUserMedia: () => undefined,\n    onUserMediaError: () => undefined,\n    screenshotFormat: \"image/webp\",\n    screenshotQuality: 0.92,\n  };\n\n  private canvas: HTMLCanvasElement | null = null;\n\n  private ctx: CanvasRenderingContext2D | null = null;\n\n  private requestUserMediaId = 0;\n\n  private unmounted = false;\n\n  stream: MediaStream | null;\n\n  video: HTMLVideoElement | null;\n\n  constructor(props: WebcamProps) {\n    super(props);\n    this.state = {\n      hasUserMedia: false\n    };\n  }\n\n  componentDidMount() {\n    const { state, props } = this;\n    this.unmounted = false;\n\n    if (!hasGetUserMedia()) {\n      props.onUserMediaError(\"getUserMedia not supported\");\n\n      return;\n    }\n\n    if (!state.hasUserMedia) {\n      this.requestUserMedia();\n    }\n\n    if (props.children && typeof props.children != 'function') {\n      console.warn(\"children must be a function\");\n    }\n  }\n\n  componentDidUpdate(nextProps: WebcamProps) {\n    const { props } = this;\n\n    if (!hasGetUserMedia()) {\n      props.onUserMediaError(\"getUserMedia not supported\");\n\n      return;\n    }\n\n    const audioConstraintsChanged =\n      JSON.stringify(nextProps.audioConstraints) !==\n      JSON.stringify(props.audioConstraints);\n    const videoConstraintsChanged =\n      JSON.stringify(nextProps.videoConstraints) !==\n      JSON.stringify(props.videoConstraints);\n    const minScreenshotWidthChanged =\n      nextProps.minScreenshotWidth !== props.minScreenshotWidth;\n    const minScreenshotHeightChanged =\n      nextProps.minScreenshotHeight !== props.minScreenshotHeight;\n    if (\n      videoConstraintsChanged ||\n      minScreenshotWidthChanged ||\n      minScreenshotHeightChanged\n    ) {\n      this.canvas = null;\n      this.ctx = null;\n    }\n    if (audioConstraintsChanged || videoConstraintsChanged) {\n      this.stopAndCleanup();\n      this.requestUserMedia();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.stopAndCleanup();\n  }\n\n  private static stopMediaStream(stream: MediaStream | null) {\n    if (stream) {\n      if (stream.getVideoTracks && stream.getAudioTracks) {\n        stream.getVideoTracks().map(track => {\n          stream.removeTrack(track);\n          track.stop();\n        });\n        stream.getAudioTracks().map(track => {\n          stream.removeTrack(track);\n          track.stop()\n        });\n      } else {\n        ((stream as unknown) as MediaStreamTrack).stop();\n      }\n    }\n  }\n\n  private stopAndCleanup() {\n    const { state } = this;\n\n    if (state.hasUserMedia) {\n      Webcam.stopMediaStream(this.stream);\n\n      if (state.src) {\n        window.URL.revokeObjectURL(state.src);\n      }\n    }\n  }\n\n  getScreenshot(screenshotDimensions?: ScreenshotDimensions) {\n    const { state, props } = this;\n\n    if (!state.hasUserMedia) return null;\n\n    const canvas = this.getCanvas(screenshotDimensions);\n    return (\n      canvas &&\n      canvas.toDataURL(props.screenshotFormat, props.screenshotQuality)\n    );\n  }\n\n  getCanvas(screenshotDimensions?: ScreenshotDimensions) {\n    const { state, props } = this;\n\n    if (!this.video) {\n      return null;\n    }\n\n    if (!state.hasUserMedia || !this.video.videoHeight) return null;\n\n    if (!this.ctx) {\n      let canvasWidth = this.video.videoWidth;\n      let canvasHeight = this.video.videoHeight;\n      if (!this.props.forceScreenshotSourceSize) {\n        const aspectRatio = canvasWidth / canvasHeight;\n\n        canvasWidth = props.minScreenshotWidth || this.video.clientWidth;\n        canvasHeight = canvasWidth / aspectRatio;\n\n        if (\n          props.minScreenshotHeight &&\n          canvasHeight < props.minScreenshotHeight\n        ) {\n          canvasHeight = props.minScreenshotHeight;\n          canvasWidth = canvasHeight * aspectRatio;\n        }\n      }\n\n      this.canvas = document.createElement(\"canvas\");\n      this.canvas.width = screenshotDimensions?.width ||  canvasWidth;\n      this.canvas.height = screenshotDimensions?.height || canvasHeight;\n      this.ctx = this.canvas.getContext(\"2d\");\n    }\n\n    const { ctx, canvas } = this;\n\n    if (ctx && canvas) {\n\n      // adjust the height and width of the canvas to the given dimensions\n      canvas.width = screenshotDimensions?.width ||  canvas.width;\n      canvas.height = screenshotDimensions?.height || canvas.height;\n\n      // mirror the screenshot\n      if (props.mirrored) {\n        ctx.translate(canvas.width, 0);\n        ctx.scale(-1, 1);\n      }\n\n      ctx.imageSmoothingEnabled = props.imageSmoothing;\n      ctx.drawImage(this.video, 0, 0, screenshotDimensions?.width || canvas.width, screenshotDimensions?.height || canvas.height);\n\n      // invert mirroring\n      if (props.mirrored) {\n        ctx.scale(-1, 1);\n        ctx.translate(-canvas.width, 0);\n      }\n    }\n\n    return canvas;\n  }\n\n  private requestUserMedia() {\n    const { props } = this;\n\n    const sourceSelected = (\n      audioConstraints: boolean | MediaTrackConstraints | undefined,\n      videoConstraints: boolean | MediaTrackConstraints | undefined,\n    ) => {\n      const constraints: MediaStreamConstraints = {\n        video: typeof videoConstraints !== \"undefined\" ? videoConstraints : true\n      };\n\n      if (props.audio) {\n        constraints.audio =\n          typeof audioConstraints !== \"undefined\" ? audioConstraints : true;\n      }\n\n      this.requestUserMediaId++\n      const myRequestUserMediaId = this.requestUserMediaId\n\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(stream => {\n          if (this.unmounted || myRequestUserMediaId !== this.requestUserMediaId) {\n            Webcam.stopMediaStream(stream);\n          } else {\n            this.handleUserMedia(null, stream);\n          }\n        })\n        .catch(e => {\n          this.handleUserMedia(e);\n        });\n    };\n\n    if (\"mediaDevices\" in navigator) {\n      sourceSelected(props.audioConstraints, props.videoConstraints);\n    } else {\n      const optionalSource = (id: string | null) => ({ optional: [{ sourceId: id }] }) as MediaTrackConstraints;\n\n      const constraintToSourceId = (constraint) => {\n        const { deviceId } = constraint;\n\n        if (typeof deviceId === \"string\") {\n          return deviceId;\n        }\n\n        if (Array.isArray(deviceId) && deviceId.length > 0) {\n          return deviceId[0];\n        }\n\n        if (typeof deviceId === \"object\" && deviceId.ideal) {\n          return deviceId.ideal;\n        }\n\n        return null;\n      };\n\n      // @ts-ignore: deprecated api\n      MediaStreamTrack.getSources(sources => {\n        let audioSource: string | null = null;\n        let videoSource: string | null = null;\n\n        sources.forEach((source: MediaStreamTrack) => {\n          if (source.kind === \"audio\") {\n            audioSource = source.id;\n          } else if (source.kind === \"video\") {\n            videoSource = source.id;\n          }\n        });\n\n        const audioSourceId = constraintToSourceId(props.audioConstraints);\n        if (audioSourceId) {\n          audioSource = audioSourceId;\n        }\n\n        const videoSourceId = constraintToSourceId(props.videoConstraints);\n        if (videoSourceId) {\n          videoSource = videoSourceId;\n        }\n\n        sourceSelected(\n          optionalSource(audioSource),\n          optionalSource(videoSource)\n        );\n      });\n    }\n  }\n\n  private handleUserMedia(err, stream?: MediaStream) {\n    const { props } = this;\n\n    if (err || !stream) {\n      this.setState({ hasUserMedia: false });\n      props.onUserMediaError(err);\n\n      return;\n    }\n\n    this.stream = stream;\n\n    try {\n      if (this.video) {\n        this.video.srcObject = stream;\n      }\n      this.setState({ hasUserMedia: true });\n    } catch (error) {\n      this.setState({\n        hasUserMedia: true,\n        src: window.URL.createObjectURL(stream)\n      });\n    }\n\n    props.onUserMedia(stream);\n  }\n\n  render() {\n    const { state, props } = this;\n\n    const {\n      audio,\n      forceScreenshotSourceSize,\n      disablePictureInPicture,\n      onUserMedia,\n      onUserMediaError,\n      screenshotFormat,\n      screenshotQuality,\n      minScreenshotWidth,\n      minScreenshotHeight,\n      audioConstraints,\n      videoConstraints,\n      imageSmoothing,\n      mirrored,\n      style = {},\n      children,\n      ...rest\n    } = props;\n\n    const videoStyle = mirrored ? { ...style, transform: `${style.transform || \"\"} scaleX(-1)` } : style;\n\n    const childrenProps: ChildrenProps = {\n      getScreenshot: this.getScreenshot.bind(this),\n    };\n\n    return (\n      <>\n        <video\n          autoPlay\n          disablePictureInPicture={disablePictureInPicture}\n          src={state.src}\n          muted={!audio}\n          playsInline\n          ref={ref => {\n            this.video = ref;\n          }}\n          style={videoStyle}\n          {...rest}\n        />\n        {children && children(childrenProps)}\n      </>\n    );\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;"],"names":["Preview","_selectedVital$","_selectedVital$2","_selectedVital$3","_selectedVital$4","_selectedVital$5","_selectedVital$6","_selectedVital$7","_selectedVital$8","_selectedVital$9","_selectedVital$10","_selectedVital$11","_selectedVital$12","_selectedVital$13","_selectedVital$14","_selectedVital$15","_selectedVital$16","_selectedVital$17","_selectedVital$18","_selectedVital$19","_selectedVital$20","_selectedVital$21","_selectedVital$22","_selectedVital$23","pdfBlob","setPdfBlob","useState","userRecord","useSelector","state","_state$userRecord","UserData","doctorsign","har","formData","_state$userRecord2","workbenchformData","urllink","_state$userRecord3","UrlLink","selectedDate","setSelectedDate","isPrintButtonVisible","setIsPrintButtonVisible","PreviewData","setPreviewData","ClinicDetails","setClinicDetails","appointmentDate","setAppointmentDate","selectedVital","setSelectedVital","prescriptionData","setPrescriptionData","clinicLogo","setClinicLogo","useEffect","axios","get","concat","location","then","response","record","data","console","error","catch","firstClinic","currentDate","Date","toISOString","split","currdate","format","PatientID","SerialNo","visitNo","length","log","doctorname","DoctorName","doctor_sign","handlePrint","useReactToPrint","content","document","getElementById","onBeforePrint","onAfterPrint","async","printdata","Error","contentWidth","offsetWidth","padding","pdfWidth","pdfHeight","pdf","jsPDF","unit","html","x","y","callback","generatedPdfBlob","output","_jsxs","className","id","children","_jsx","src","alt","concern_name","door_no","street","area","city","pincode","phone_no","email","style","color","fontWeight","Title","FirstName","LastName","Age","Gender","City","State","Pincode","PhoneNumber","map","item","index","Next_Appointment","_Fragment","Pulse","SPO2","Heart_Rate","RR","SBP","DBP","Position","Part","Method","WeightKg","HeightCm","HCCm","WCCm","paddingBottom","medicine","GenericName","ItemName","Dose","Route","Frequency","Duration","Qty","Instruction","Diagnosis","History","Examination","Treatment_Procedure","width","height","onClick","setTimeout","NewProcedure","_formValues$Procedure5","_formValues$Procedure6","formValues","setFormValues","Index","ProcedureName","Sessions","IsComplementry","Complementry","ComplementrySessions","VisitID","createdBy","Status","branchlocation","KitName","ServiceType","setProcedureName","ProcedureData","setProcedureData","openModal2","setOpenModal2","modalContent","setModalContent","isSidebarOpen","_state$userRecord4","getprocedure","setgetprocedure","navigate","useNavigate","getStockid_Name","setgetStockid_Name","SelectedProcedure","setSelectedProcedure","FormTreatprocedure","setFormTreatprocedure","AppointmentDate","TherapistName","TreatmentProcedure","NextAppointment","CompletedSessions","currentsession","AdditionalComments","GraftCount","Ratecard","setRatecard","RatecardType","InsuranceName","ClientName","StatusSelectedProcedure","setStatusSelectedProcedure","showCamera1","setShowCamera1","isCameraImageCaptured1","setIsCameraImageCaptured1","capturedImage1","setCapturedImage1","showCamera2","setShowCamera2","isCameraImageCaptured2","setIsCameraImageCaptured2","capturedImage2","setCapturedImage2","webcamRef","useRef","selectedFile1","setSelectedFile1","selectedFile2","setSelectedFile2","facingMode","setFacingMode","IsmobileorNot","setIsmobileorNot","modalIsOpen","setModalIsOpen","openImageView","setopenImageView","modalContent2","setModalContent2","userwarn","warningMessage","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","marginTop","closeModal","prev","username","getitemName","handleonchange","e","name","value","target","getSdata","find","ele","AnsCond","isComplimentary","includes","ComplimentaryName","SessenCounts","res","err","handleonchange1","videoConstraints","switchCamera","prevMode","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","type","justifyContent","htmlFor","onChange","Array","isArray","procedure","disabled","list","Updateprocedure","_formValues$Procedure3","_formValues$Procedure4","requiredFields","push","existingItem","filter","field","updateddate","indx","findIndex","p","alert","join","Addprocedure","_formValues$Procedure","_formValues$Procedure2","alreadyexist","lengthval","client","handleEdit","EditNoteIcon","handleSave","flatMap","additionalRows","Therapist_Name","post","_response$data","_response$data3","_response$data2","msg","message","success","_response$data4","stopPropagation","HighlightOffIcon","ProcedureID","Number_of_Sessions","Number_of_Sessions_completed","current_session","CreatedBy","handleEdit1","readOnly","accept","event","file","files","display","handleOpenCamera","handleHideCamera","Webcam","audio","ref","screenshotFormat","mirrored","CameraswitchIcon","handleRecaptureCameraImage","handlecaptureImage1","imageSrc","current","getScreenshot","handleCloseCamera","handleOpenCamera2","handleHideCamera2","handleRecaptureCameraImage2","handlecaptureImage2","handleCloseCamera2","required","handleSave1","dataToSend","beforecapturedImage","aftercapturedImage","BackformData","FormData","key","hasOwnProperty","append","arr","exist","headers","billingdata","PatientName","firstName","lastName","Unit","parseInt","Amount","Discount","Gstcharge","TotalAmount","urlval","ratecardType","fetchAndPostBillingData","Charge","parseFloat","GstCharge","postResponse","window","confirm","ToastContainer","Modal","isOpen","onRequestClose","inset","border","background","overflow","borderRadius","outline","toLowerCase","startsWith","title","Button","fontSize","backgroundColor","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","factory","__WEBPACK_EXTERNAL_MODULE_react__","installedModules","__webpack_require__","moduleId","module","l","modules","call","m","c","getter","o","Object","defineProperty","enumerable","r","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","n","object","property","prototype","s","hasGetUserMedia","navigator","mediaDevices","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","resolve","reject","_super","props","_this","canvas","ctx","requestUserMediaId","unmounted","hasUserMedia","__extends","componentDidMount","this","requestUserMedia","onUserMediaError","componentDidUpdate","nextProps","audioConstraintsChanged","JSON","stringify","audioConstraints","videoConstraintsChanged","minScreenshotWidthChanged","minScreenshotWidth","minScreenshotHeightChanged","minScreenshotHeight","stopAndCleanup","componentWillUnmount","stopMediaStream","stream","getVideoTracks","getAudioTracks","track","removeTrack","stop","URL","revokeObjectURL","screenshotDimensions","getCanvas","toDataURL","screenshotQuality","video","videoHeight","canvasWidth","videoWidth","canvasHeight","forceScreenshotSourceSize","aspectRatio","clientWidth","createElement","getContext","translate","scale","imageSmoothingEnabled","imageSmoothing","drawImage","sourceSelected","myRequestUserMediaId","handleUserMedia","optionalSource_1","optional","sourceId","constraintToSourceId_1","constraint","deviceId","ideal","MediaStreamTrack","getSources","sources","audioSource","videoSource","forEach","source","kind","audioSourceId","videoSourceId","setState","srcObject","createObjectURL","onUserMedia","render","disablePictureInPicture","_b","rest","__rest","videoStyle","__assign","transform","childrenProps","react__WEBPACK_IMPORTED_MODULE_0__","autoPlay","muted","playsInline","defaultProps","__webpack_exports__"],"sourceRoot":""}