{"version":3,"file":"static/js/6953.3dbdab91.chunk.js","mappings":"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","sources":["IP_Workbench/Nurse/IP_NursePreOPIns.jsx"],"sourcesContent":["import React, { useState, useEffect,useRef } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactGrid from '../../OtherComponent/ReactGrid/ReactGrid';\r\nimport axios from 'axios';\r\nimport ToastAlert from '../../OtherComponent/ToastContainer/ToastAlert';\r\nimport { IconButton } from '@mui/material';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n// import OTpic from \"../../Assets/OTpic.jpg\";\r\n// import \"../IP/ICU_Management/ICU_Doctor/IpPreoperativeIns.css\"\r\nimport OTpic from \"../../Assets/OTpic.jpg\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\n\r\nconst IP_NursePreOPIns = () => {\r\n    const dispatch = useDispatch();\r\n    const UrlLink = useSelector(state => state.userRecord?.UrlLink);\r\n    const toast = useSelector(state => state.userRecord?.toast);\r\n    const IP_DoctorWorkbenchNavigation = useSelector(state => state.Frontoffice?.IP_DoctorWorkbenchNavigation);\r\n    console.log(IP_DoctorWorkbenchNavigation,'IP_DoctorWorkbenchNavigation');\r\n\r\n    const userRecord = useSelector((state) => state.userRecord?.UserData);\r\n\r\n    const formatLabel = (label) => {\r\n\r\n        if (/[a-z]/.test(label) && /[A-Z]/.test(label) && !/\\d/.test(label)) {\r\n            return label\r\n                .replace(/([a-z])([A-Z])/g, \"$1 $2\")\r\n                .replace(/^./, (str) => str.toUpperCase());\r\n        } else {\r\n            return label;\r\n        }\r\n    };\r\n\r\n \r\n  const [annotatedImage, setAnnotatedImage] = useState(null); // State for annotated image\r\n\r\n\r\n  \r\n  const [inputValuesIns, setInputValuesIns] = useState({\r\n    ScalpHair: false,\r\n    Nails: false,\r\n    Givemouth: false,\r\n    Vaginal: false,\r\n    Bowel: false,\r\n    Enema: false,\r\n    secTextArea: \"\",\r\n    SixTextArea: \"\",\r\n    SevenTextArea: \"\",\r\n    ThirdTextArea: \"\",\r\n    urinaryCatheter: false,\r\n    DutySisterName: \"\",\r\n    nasogastricTube: false,\r\n    Date: \"\",\r\n    Time: \"\",\r\n  });\r\n\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setInputValuesIns((prevValues) => ({\r\n      ...prevValues,\r\n      [name]: checked,\r\n    }));\r\n  };\r\n\r\n  const handleTextareaChange = (e, fieldName) => {\r\n    const { value } = e.target;\r\n    setInputValuesIns((prevValues) => ({\r\n      ...prevValues,\r\n      [fieldName]: value,\r\n    }));\r\n  };\r\n\r\n  \r\n  const handlecircleClick = (event) => {\r\n    const rect = drawingPadRefcircle.current.getBoundingClientRect();\r\n    const x = event.clientX - rect.left;\r\n    const y = event.clientY - rect.top;\r\n\r\n    const newCircle = {\r\n      x: x,\r\n      y: y,\r\n      radius: 15, // 3cm radius (1cm ≈ 37.795275591px, so 3cm ≈ 113.3858268px)\r\n      colour: 'red',\r\n      linewidth: 2\r\n    };\r\n\r\n    setLines([...lines, newCircle]);\r\n  };\r\n\r\n\r\n  const [startIV, setStartIV] = useState({\r\n    nilOrallyAfter: {\r\n      value: \"\",\r\n      period: \"am\",\r\n    },\r\n\r\n    ivDripAt: {\r\n      value: \"\",\r\n      period: \"am\",\r\n    },\r\n    ivSiteList: \"Select\",\r\n    location: \"Select\",\r\n  });\r\n\r\n  const handleInputChange3 = (e, fieldName, nestedField = null) => {\r\n    const { value } = e.target;\r\n    if (nestedField) {\r\n      setStartIV((prevData) => ({\r\n        ...prevData,\r\n        [fieldName]: {\r\n          ...prevData[fieldName],\r\n          [nestedField]: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setStartIV((prevData) => ({\r\n        ...prevData,\r\n        [fieldName]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  const [gridData, setGridData] = useState([])\r\n  const [IsGetData, setIsGetData] = useState(false)\r\n\r\n  const [IsViewMode, setIsViewMode] = useState(false)\r\n\r\n\r\n  const PreOpInsColumns = [\r\n    {\r\n        key: 'id',\r\n        name: 'S.No',\r\n        frozen: true\r\n    },\r\n    {\r\n        key: 'view',\r\n        frozen: true,\r\n        name: 'View',\r\n        renderCell: (params) => (\r\n          <IconButton onClick={() => handleView(params.row)}>\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n        ),\r\n      },\r\n    { key: 'VisitId', name: 'VisitId',frozen: true },\r\n    { key: 'PrimaryDoctorName', name: 'Doctor Name',frozen: true },\r\n  \r\n    {\r\n        key: 'Date',\r\n        name: 'Date',\r\n        frozen: true\r\n    },\r\n    {\r\n        key: 'Time',\r\n        name: 'Time',\r\n        frozen: true\r\n    },\r\n   \r\n   \r\n   \r\n  \r\n    \r\n]\r\n\r\nconst handleView = (data) => {\r\n    if (!data) {\r\n      console.error(\"No data provided for view.\");\r\n      return;\r\n    }\r\n  \r\n    // Process time fields\r\n    const nilOrallyAfterParts = data.nilOrallyAfter?.split(' ') || ['', 'am'];\r\n    const ivDripAtParts = data.ivDripAt?.split(' ') || ['', 'am'];\r\n  \r\n    // Update startIV state\r\n    setStartIV({\r\n      nilOrallyAfter: {\r\n        value: nilOrallyAfterParts[0],\r\n        period: nilOrallyAfterParts[1] || 'am',\r\n      },\r\n      ivDripAt: {\r\n        value: ivDripAtParts[0],\r\n        period: ivDripAtParts[1] || 'am',\r\n      },\r\n      ivSiteList: data.ivSiteList || 'Select',\r\n      location: data.location || 'Select',\r\n    });\r\n  \r\n    // Update inputValuesIns state\r\n    setInputValuesIns({\r\n      ScalpHair: data.ScalpHair || '',\r\n      Nails: data.Nails || '',\r\n      Givemouth: data.Givemouth || '',\r\n      Vaginal: data.Vaginal || '',\r\n      Bowel: data.Bowel || '',\r\n      Enema: data.Enema || '',\r\n      secTextArea: data.secTextArea || '',\r\n      SixTextArea: data.SixTextArea || '',\r\n      SevenTextArea: data.SevenTextArea || '',\r\n      ThirdTextArea: data.ThirdTextArea || '',\r\n      urinaryCatheter: data.urinaryCatheter || '',\r\n      DutySisterName: data.DutySisterName || '',\r\n      nasogastricTube: data.nasogastricTube || '',\r\n      Date: data.Date || '',\r\n      Time: data.Time || '',\r\n    });\r\n  \r\n    // Display annotated image if available\r\n    if (data.AnnotatedImage) {\r\n      setAnnotatedImage(data.AnnotatedImage);\r\n    } else {\r\n      setAnnotatedImage(null); // Clear the image if not available\r\n    }\r\n  \r\n    // Set view mode\r\n    setIsViewMode(true);\r\n  };\r\n\r\n  \r\n  const handleClear = () => {\r\n    // Reset state values to initial or default values\r\n    setStartIV({\r\n      nilOrallyAfter: {\r\n        value: '',\r\n        period: 'am',\r\n      },\r\n      ivDripAt: {\r\n        value: '',\r\n        period: 'am',\r\n      },\r\n      ivSiteList: 'Select',\r\n      location: 'Select',\r\n    });\r\n  \r\n    setInputValuesIns({\r\n      ScalpHair: '',\r\n      Nails: '',\r\n      Givemouth: '',\r\n      Vaginal: '',\r\n      Bowel: '',\r\n      Enema: '',\r\n      secTextArea: '',\r\n      SixTextArea: '',\r\n      SevenTextArea: '',\r\n      ThirdTextArea: '',\r\n      urinaryCatheter: '',\r\n      DutySisterName: '',\r\n      nasogastricTube: '',\r\n      Date: '',\r\n      Time: '',\r\n    });\r\n  \r\n    setAnnotatedImage(null); // Clear the annotated image if present\r\n  \r\n    // Set view mode to false\r\n    setIsViewMode(false);\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    axios.get(`${UrlLink}Ip_Workbench/IP_PreOpInstructions_Details_Link`,{params:{RegistrationId:IP_DoctorWorkbenchNavigation?.RegistrationId}})\r\n        .then((res) => {\r\n            const ress = res.data\r\n            console.log(ress)\r\n            setGridData(ress)\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n  }, [UrlLink,IP_DoctorWorkbenchNavigation,IsGetData,annotatedImage])\r\n\r\n\r\n  const [lines, setLines] = useState([]);\r\n  const drawingPadRefcircle = useRef(null);\r\n\r\n\r\n  const handleSubmit = () => {\r\n    console.log(lines, OTpic, '-------');\r\n  \r\n    if (OTpic && lines.length > 0) {\r\n      html2canvas(drawingPadRefcircle.current, { useCORS: true }).then((canvas) => {\r\n        const mergedImage = canvas.toDataURL(\"image/jpeg\");\r\n        console.log(\"Annotated Image Data URL:\", mergedImage);\r\n  \r\n        const formData = new FormData();\r\n        const imageData = mergedImage.split(',')[1];\r\n        formData.append('AnnotatedImage', imageData);\r\n\r\n        // formData.append('AnnotatedImage', new Blob([imageData], { type: 'image/jpeg' }), 'annotatedImage.jpg');\r\n  \r\n        const postData = {\r\n            ...inputValuesIns,\r\n            nilOrallyAfter: `${startIV.nilOrallyAfter.value} ${startIV.nilOrallyAfter.period}`,\r\n            ivDripAt: `${startIV.ivDripAt.value} ${startIV.ivDripAt.period}`,\r\n            ivSiteList: startIV.ivSiteList,\r\n            location: startIV.location,\r\n            RegistrationId:IP_DoctorWorkbenchNavigation?.RegistrationId,\r\n            Createdby:userRecord?.username,\r\n           \r\n          };\r\n  \r\n          // Append each key-value pair from postData to formData\r\n          Object.keys(postData).forEach(key => {\r\n            formData.append(key, postData[key]);\r\n          });\r\n       \r\n        axios.post(`${UrlLink}Ip_Workbench/IP_PreOpInstructions_Details_Link`, formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          const [type, message] = [Object.keys(res.data)[0], Object.values(res.data)[0]];\r\n          dispatch({ type: 'toast', value: { message, type } });\r\n          setIsGetData(prev => !prev);\r\n          handleClear();\r\n        })\r\n        .catch((err) => {\r\n          console.error('Submission error:', err);\r\n        });\r\n  \r\n      }).catch((error) => {\r\n        console.error('Error capturing image:', error);\r\n      });\r\n    } else {\r\n      console.warn('OTpic is missing or lines length is zero.');\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n        <div className='new-patient-registration-form'>\r\n        <br />\r\n\r\n\r\n            <div className=\"Supplier_Master_Container\">\r\n            <h4\r\n                style={{\r\n                color: \"var(--labelcolor)\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                textAlign: \"start\",\r\n                padding: \"10px\",\r\n                }}\r\n            >\r\n                Preoperative Intructions\r\n            </h4>\r\n\r\n            <div className=\"OtMangementForm_1 djkwked675 dedwe\">\r\n                <label className=\"jewj33j\">Date:</label>\r\n                <input\r\n                type=\"date\"\r\n                value={inputValuesIns.Date}\r\n                onChange={(e) =>\r\n                    setInputValuesIns((prevData) => ({\r\n                    ...prevData,\r\n                    Date: e.target.value,\r\n                    }))\r\n                }\r\n                />\r\n            </div>\r\n            <div className=\"OtMangementForm_1 djkwked675 dedwe\">\r\n                <label className=\"jewj33j\">Time:</label>\r\n                <input\r\n                type=\"time\"\r\n                value={inputValuesIns.Time}\r\n                onChange={(e) =>\r\n                    setInputValuesIns((prevData) => ({\r\n                    ...prevData,\r\n                    Time: e.target.value,\r\n                    }))\r\n                }\r\n                />\r\n            </div>\r\n\r\n            <div\r\n                className=\"wdqqwqxxz\"\r\n                style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n                <label>\r\n                <p style={{ marginRight: \"10px\" }}>1.</p> (a) Prepare the\r\n                following area (mark the area) :\r\n                </label>\r\n                {\r\n                !annotatedImage ?\r\n                    <div className=\"web_camera_svg\" ref={drawingPadRefcircle}>\r\n                    <img src={OTpic} alt=\"background\" />\r\n                    <svg onClick={handlecircleClick}>\r\n                        {lines.map((circle, index) => (\r\n                        <circle\r\n                            key={index}\r\n                            cx={circle.x}\r\n                            cy={circle.y}\r\n                            r={circle.radius}\r\n                            stroke={circle.colour}\r\n                            strokeWidth={circle.linewidth}\r\n                            fill=\"none\"\r\n                        />\r\n                        ))}\r\n                    </svg>\r\n                    </div>\r\n                    :\r\n                \r\n                    <img src={annotatedImage} alt=\"background\" />\r\n                    \r\n                }\r\n\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                <p\r\n                    style={{\r\n                    marginRight: \"10px\",\r\n                    width: \"10px !important\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    }}\r\n                >\r\n                    (b)\r\n                </p>\r\n                <span\r\n                    className=\"ddddd445\"\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    gap: \"10px\",\r\n                    width: \"280px\",\r\n                    }}\r\n                >\r\n                    Scalp Hair to he covered braided / clipped<span>:</span>\r\n                </span>\r\n                </label>\r\n\r\n                <div className=\"dccffcfc5\">\r\n                <label htmlFor=\"ScalpHair\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    id=\"ScalpHair\"\r\n                    name=\"ScalpHair\"\r\n                    checked={inputValuesIns.ScalpHair}\r\n                    onChange={handleCheckboxChange}\r\n                    />\r\n                </label>\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                <p\r\n                    style={{\r\n                    marginRight: \"10px\",\r\n                    width: \"10px !important\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    }}\r\n                >\r\n                    (c)\r\n                </p>\r\n                <span\r\n                    className=\"ddddd445\"\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    gap: \"10px\",\r\n                    width: \"280px\",\r\n                    }}\r\n                >\r\n                    {\" \"}\r\n                    Nails to be cleaned,clipped<span>:</span>\r\n                </span>\r\n                </label>\r\n\r\n                <div className=\"dccffcfc5\">\r\n                <label htmlFor=\"Nails\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    id=\"Nails\"\r\n                    name=\"Nails\"\r\n                    checked={inputValuesIns.Nails}\r\n                    onChange={handleCheckboxChange}\r\n                    />\r\n                </label>\r\n                </div>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div className=\"cccccccbbn\">\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                    <p style={{ marginRight: \"10px\" }}>2.</p>Give mouth wash\r\n                </label>\r\n                <label htmlFor=\"Givemouth\" className=\"qwdw33wew2sd\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    id=\"Givemouth\"\r\n                    name=\"Givemouth\"\r\n                    checked={inputValuesIns.Givemouth}\r\n                    onChange={handleCheckboxChange}\r\n                    />\r\n                </label>\r\n                </div>\r\n\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>Vaginal douche</label>\r\n                <label htmlFor=\"Vaginal\" className=\"qwdw33wew2sd\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    id=\"Vaginal\"\r\n                    name=\"Vaginal\"\r\n                    checked={inputValuesIns.Vaginal}\r\n                    onChange={handleCheckboxChange}\r\n                    />\r\n                </label>\r\n                </div>\r\n\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>Bowel wash</label>\r\n                <label htmlFor=\"Bowel\" className=\"qwdw33wew2sd\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    id=\"Bowel\"\r\n                    name=\"Bowel\"\r\n                    checked={inputValuesIns.Bowel}\r\n                    onChange={handleCheckboxChange}\r\n                    />\r\n                </label>\r\n                </div>\r\n\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>Enema </label>\r\n                <label htmlFor=\"Enema\" className=\"qwdw33wew2sd\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    id=\"Enema\"\r\n                    name=\"Enema\"\r\n                    checked={inputValuesIns.Enema}\r\n                    onChange={handleCheckboxChange}\r\n                    />\r\n                </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <textarea\r\n                value={inputValuesIns.secTextArea}\r\n                onChange={(e) => handleTextareaChange(e, 'secTextArea')}\r\n                ></textarea>\r\n            </div>\r\n\r\n            <div className=\"cccccccbbn\">\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                    <p style={{ marginRight: \"10px\" }}>3.</p> Pass urinary catheter\r\n                </label>\r\n                <label htmlFor=\"urinaryCatheter\" className=\"qwdw33wew2sd\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    id=\"urinaryCatheter\"\r\n                    name=\"urinaryCatheter\"\r\n                    checked={inputValuesIns.urinaryCatheter}\r\n                    onChange={handleCheckboxChange}\r\n                    />\r\n                </label>\r\n                </div>\r\n\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>nasogastric tube</label>\r\n                <label htmlFor=\"nasogastricTube\" className=\"qwdw33wew2sd\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    id=\"nasogastricTube\"\r\n                    name=\"nasogastricTube\"\r\n                    checked={inputValuesIns.nasogastricTube}\r\n                    onChange={handleCheckboxChange}\r\n                    />\r\n                </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <textarea\r\n                value={inputValuesIns.ThirdTextArea}\r\n                onChange={(e) => handleTextareaChange(e, 'ThirdTextArea')}\r\n                ></textarea>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div className=\"cccccccbbn\">\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                    <p\r\n                    style={{\r\n                        marginRight: \"10px\",\r\n                        width: \"10px !important\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                    }}\r\n                    >\r\n                    4.\r\n                    </p>\r\n                    <span\r\n                    className=\"ddddd445\"\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        gap: \"10px\",\r\n                        width: \"140px\",\r\n                    }}\r\n                    >\r\n                    Nil orally after <span>:</span>\r\n                    </span>\r\n                </label>\r\n                <label htmlFor=\"\" className=\"jyutr\">\r\n                    <input\r\n                    type=\"number\"\r\n                    value={startIV.nilOrallyAfter.value}\r\n                    onChange={(e) =>\r\n                        handleInputChange3(e, \"nilOrallyAfter\", \"value\")\r\n                    }\r\n                    />\r\n                </label>\r\n                <select\r\n                    value={startIV.nilOrallyAfter.period}\r\n                    onChange={(e) =>\r\n                    handleInputChange3(e, \"nilOrallyAfter\", \"period\")\r\n                    }\r\n                >\r\n                    <option>am</option>\r\n                    <option>pm</option>\r\n                </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                <p\r\n                    style={{\r\n                    marginRight: \"10px\",\r\n                    width: \"10px !important\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    }}\r\n                >\r\n                    5.\r\n                </p>{\" \"}\r\n                <span\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    gap: \"10px\",\r\n                    width: \"130px\",\r\n                    }}\r\n                >\r\n                    Start IV with Venflo<span>:</span>\r\n                </span>\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                <p\r\n                    style={{\r\n                    marginRight: \"10px\",\r\n                    width: \"10px !important\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    }}\r\n                >\r\n                    (a)\r\n                </p>\r\n                <span\r\n                    className=\"ddddd445\"\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    gap: \"10px\",\r\n                    width: \"140px\",\r\n                    }}\r\n                >\r\n                    Drip at<span>:</span>\r\n                </span>\r\n                </label>\r\n                <label htmlFor=\"\" className=\"jyutr\">\r\n                <input\r\n                    type=\"number\"\r\n                    value={startIV.ivDripAt.value}\r\n                    onChange={(e) => handleInputChange3(e, \"ivDripAt\", \"value\")}\r\n                />\r\n                </label>\r\n                <select\r\n                value={startIV.ivDripAt.period}\r\n                onChange={(e) => handleInputChange3(e, \"ivDripAt\", \"period\")}\r\n                >\r\n                <option>am</option>\r\n                <option>pm</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                <p\r\n                    style={{\r\n                    marginRight: \"10px\",\r\n                    width: \"10px !important\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    }}\r\n                >\r\n                    (b)\r\n                </p>\r\n                <span\r\n                    className=\"ddddd445\"\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    gap: \"10px\",\r\n                    width: \"140px\",\r\n                    }}\r\n                >\r\n                    IV Site List<span>:</span>\r\n                </span>\r\n                </label>\r\n                <select\r\n                className=\"jjklkj1\"\r\n                value={startIV.ivSiteList}\r\n                onChange={(e) => handleInputChange3(e, \"ivSiteList\")}\r\n                >\r\n                <option>Select</option>\r\n                <option>External Jugular</option>\r\n                <option>Subclavian vein</option>\r\n                <option>Femoral vein</option>\r\n                <option>Dorsal Venous Network of Hand</option>\r\n                <option>Radial vein</option>\r\n                <option>Median Cubital vein</option>\r\n                <option>Cephalic vein</option>\r\n                <option>Dorsal Venous Network of Leg</option>\r\n                <option>Saphaneous vein</option>\r\n                <option>Superficial Temporal vein</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                <p\r\n                    style={{\r\n                    marginRight: \"10px\",\r\n                    width: \"10px !important\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    }}\r\n                >\r\n                    (c)\r\n                </p>\r\n                <span\r\n                    className=\"ddddd445\"\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    gap: \"10px\",\r\n                    width: \"140px\",\r\n                    }}\r\n                >\r\n                    Location<span>:</span>\r\n                </span>\r\n                </label>\r\n                <select\r\n                className=\"jjklkj1\"\r\n                value={startIV.location}\r\n                onChange={(e) => handleInputChange3(e, \"location\")}\r\n                >\r\n                <option>Select</option>\r\n                <option>Left</option>\r\n                <option>Right</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"cccccccbbn\">\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                    <p style={{ marginRight: \"10px\" }}>6.</p> Preanaesthetic medication / Anticoagulants / Other Medicines\r\n                </label>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <textarea\r\n                value={inputValuesIns.SixTextArea}\r\n                onChange={(e) => handleTextareaChange(e, 'SixTextArea')}\r\n\r\n                ></textarea>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"cccccccbbn\">\r\n                <div className=\"wdqqwqxxz\">\r\n                <label>\r\n                    <p style={{ marginRight: \"10px\" }}>7.</p> Send all Records & Reports with the patient to the Operation Room\r\n                </label>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wdqqwqxxz\">\r\n                <textarea\r\n                value={inputValuesIns.SevenTextArea}\r\n                onChange={(e) => handleTextareaChange(e, 'SevenTextArea')}\r\n                ></textarea>\r\n            </div>\r\n\r\n            <div className=\"OtMangementForm_1 djkwked675 dedwe\">\r\n                <label className=\"jewj33j\">Checked by(Duty Sister Name) - </label>\r\n                <input\r\n                type=\"text\"\r\n                style={{ border: \"none\", borderBottom: \"2px solid var(--ProjectColor)\", outline: \"none\" }}\r\n                value={inputValuesIns.DutySisterName}\r\n                onChange={(e) =>\r\n                    setInputValuesIns((prevData) => ({\r\n                    ...prevData,\r\n                    DutySisterName: e.target.value,\r\n                    }))\r\n                }\r\n                />\r\n            </div>\r\n   \r\n            <div className=\"Main_container_Btn\">\r\n            \r\n                {IsViewMode && (\r\n                    <button onClick={handleClear}>Clear</button>\r\n                )}\r\n                {!IsViewMode && (\r\n                    <button onClick={handleSubmit}>Submit</button>\r\n                )}\r\n            </div>\r\n\r\n            {gridData.length >= 0 &&\r\n                <ReactGrid columns={PreOpInsColumns} RowData={gridData} />\r\n            }\r\n        \r\n            <ToastAlert Message={toast.message} Type={toast.type} />\r\n\r\n                \r\n         \r\n            </div>\r\n\r\n        </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default IP_NursePreOPIns"],"names":["IP_NursePreOPIns","dispatch","useDispatch","UrlLink","useSelector","state","_state$userRecord","userRecord","toast","_state$userRecord2","IP_DoctorWorkbenchNavigation","_state$Frontoffice","Frontoffice","console","log","_state$userRecord3","UserData","annotatedImage","setAnnotatedImage","useState","inputValuesIns","setInputValuesIns","ScalpHair","Nails","Givemouth","Vaginal","Bowel","Enema","secTextArea","SixTextArea","SevenTextArea","ThirdTextArea","urinaryCatheter","DutySisterName","nasogastricTube","Date","Time","handleCheckboxChange","e","name","checked","target","prevValues","handleTextareaChange","fieldName","value","startIV","setStartIV","nilOrallyAfter","period","ivDripAt","ivSiteList","location","handleInputChange3","nestedField","arguments","length","undefined","prevData","gridData","setGridData","IsGetData","setIsGetData","IsViewMode","setIsViewMode","PreOpInsColumns","key","frozen","renderCell","params","_jsx","IconButton","onClick","handleView","row","children","VisibilityIcon","data","_data$nilOrallyAfter","_data$ivDripAt","error","nilOrallyAfterParts","split","ivDripAtParts","AnnotatedImage","handleClear","useEffect","axios","get","concat","RegistrationId","then","res","ress","catch","err","lines","setLines","drawingPadRefcircle","useRef","_jsxs","className","style","color","display","justifyContent","alignItems","textAlign","padding","type","onChange","flexDirection","marginRight","src","alt","ref","OTpic","event","rect","current","getBoundingClientRect","newCircle","x","clientX","left","y","clientY","top","radius","colour","linewidth","map","circle","index","cx","cy","r","stroke","strokeWidth","fill","width","gap","htmlFor","id","border","borderBottom","outline","handleSubmit","html2canvas","useCORS","canvas","mergedImage","toDataURL","formData","FormData","imageData","append","postData","Createdby","username","Object","keys","forEach","post","headers","message","values","prev","warn","ReactGrid","columns","RowData","ToastAlert","Message","Type"],"sourceRoot":""}