{"version":3,"file":"static/js/2973.bb385a01.chunk.js","mappings":"+NAUA,MAigBA,EAjgBsCA,KAClC,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAYC,IAAK,IAAAC,EAAA,OAAoB,QAApBA,EAAID,EAAME,kBAAU,IAAAD,OAAA,EAAhBA,EAAkBH,OAAO,IACxDK,GAAQJ,EAAAA,EAAAA,KAAYC,IAAK,IAAAI,EAAA,OAAoB,QAApBA,EAAIJ,EAAME,kBAAU,IAAAE,OAAA,EAAhBA,EAAkBD,KAAK,IACpDE,GAA+BN,EAAAA,EAAAA,KAAYC,IAAK,IAAAM,EAAA,OAAqB,QAArBA,EAAIN,EAAMO,mBAAW,IAAAD,OAAA,EAAjBA,EAAmBD,4BAA4B,IACzGG,QAAQC,IAAIJ,EAA6B,gCAEzC,MAAMH,GAAaH,EAAAA,EAAAA,KAAaC,IAAK,IAAAU,EAAA,OAAqB,QAArBA,EAAKV,EAAME,kBAAU,IAAAQ,OAAA,EAAhBA,EAAkBC,QAAQ,KAc7DC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,CACjDC,KAAM,GACNC,KAAM,GACNC,cAAe,GACfC,qBAAsB,GACtBC,mBAAoB,GACpBC,0BAA2B,GAC3BC,iBAAkB,GAClBC,wBAAyB,GACzBC,cAAe,GACfC,qBAAsB,GACtBC,gBAAiB,GACjBC,uBAAwB,GACxBC,WAAY,GACZC,kBAAmB,GACnBC,aAAc,GACdC,oBAAqB,GACrBC,aAAc,GACdC,oBAAqB,GACrBC,aAAc,GACdC,oBAAqB,GACrBC,WAAY,GACZC,kBAAmB,GACnBC,cAAe,GACfC,qBAAsB,GACtBC,UAAW,GACXC,iBAAkB,GAClBC,UAAW,GACXC,iBAAkB,GAClBC,iBAAkB,GAClBC,wBAAyB,GACzBC,YAAa,GACbC,mBAAoB,GACpBC,WAAY,GACZC,kBAAmB,GACnBC,cAAe,GACfC,qBAAsB,GACtBC,UAAW,GACXC,iBAAkB,GAClBC,yBAA0B,GAC1BC,gCAAiC,GACjCC,UAAW,GACXC,iBAAkB,GAClBC,UAAW,GACXC,iBAAkB,GAClBC,SAAU,GACVC,gBAAiB,GACjBC,uBAAwB,GACxBC,8BAA+B,GAC/BC,YAAa,GACbC,eAAgB,KAKdC,EAAuBA,CAACC,EAAMC,KAChCtD,GAAmBuD,IAAQ,IACtBA,EACH,CAACF,GAAOC,KACP,EAGCE,EAAuBA,CAACH,EAAMI,KAClCzD,GAAmBuD,IAAQ,IACtBA,EACH,CAACF,GAAOI,KACP,EAIDC,EAAgBA,CAACC,EAAON,KAC1BO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,EACjDF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,UAASC,SAAA,CACvBH,GACDI,EAAAA,EAAAA,KAAA,QAAAD,SAAM,UAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCF,EAAAA,EAAAA,MAAA,SAAOI,QAAO,GAAAC,OAAKZ,EAAI,OAAMS,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEG,KAAK,WACLC,GAAE,GAAAF,OAAKZ,EAAI,OACXA,KAAMA,EACNI,MAAM,MACNW,QAAkC,QAAzBrE,EAAesD,GACxBgB,SAAUA,IAAMjB,EAAqBC,EAAM,SAC3C,UAGJO,EAAAA,EAAAA,MAAA,SAAOI,QAAO,GAAAC,OAAKZ,EAAI,MAAKS,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEG,KAAK,WACLC,GAAE,GAAAF,OAAKZ,EAAI,MACXA,KAAMA,EACNI,MAAM,KACNW,QAAkC,OAAzBrE,EAAesD,GACxBgB,SAAUA,IAAMjB,EAAqBC,EAAM,QAC3C,SAIJO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,WACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,UAEfC,EAAAA,EAAAA,KAAA,YACEN,MAAO1D,EAAe,GAADkE,OAAIZ,EAAI,YAC7BgB,SAAWC,GACTd,EAAqB,GAADS,OAAIZ,EAAI,WAAWiB,EAAEC,OAAOd,kBASxDe,EAAe,CACjB,CACIC,IAAK,KACLpB,KAAM,OACNqB,QAAQ,GAEZ,CACID,IAAK,OACLC,QAAQ,EACRrB,KAAM,OACNsB,WAAaC,IACXb,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAASA,IAAMC,EAAWH,EAAOI,KAAKlB,UAChDC,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,OAKvB,CAAER,IAAK,UAAWpB,KAAM,UAAUqB,QAAQ,GAC1C,CAAED,IAAK,oBAAqBpB,KAAM,cAAcqB,QAAQ,GAExD,CACID,IAAK,OACLpB,KAAM,OACNqB,QAAQ,GAEZ,CACID,IAAK,OACLpB,KAAM,OACNqB,QAAQ,KASTQ,EAAUC,IAAelF,EAAAA,EAAAA,UAAS,KAClCmF,EAAWC,IAAgBpF,EAAAA,EAAAA,WAAS,IAEpCqF,EAAYC,IAAiBtF,EAAAA,EAAAA,WAAS,GA8DvC8E,EAAcS,IAChBxF,GAAmByF,IAAI,IAChBA,KACAD,MAEPD,GAAc,EAAK,EAKjBG,EAAcA,KAChB1F,EAAkB,CACdE,KAAM,GACNC,KAAM,GACNC,cAAe,GACfC,qBAAsB,GACtBC,mBAAoB,GACpBC,0BAA2B,GAC3BC,iBAAkB,GAClBC,wBAAyB,GACzBC,cAAe,GACfC,qBAAsB,GACtBC,gBAAiB,GACjBC,uBAAwB,GACxBC,WAAY,GACZC,kBAAmB,GACnBC,aAAc,GACdC,oBAAqB,GACrBC,aAAc,GACdC,oBAAqB,GACrBC,aAAc,GACdC,oBAAqB,GACrBC,WAAY,GACZC,kBAAmB,GACnBC,cAAe,GACfC,qBAAsB,GACtBC,UAAW,GACXC,iBAAkB,GAClBC,UAAW,GACXC,iBAAkB,GAClBC,iBAAkB,GAClBC,wBAAyB,GACzBC,YAAa,GACbC,mBAAoB,GACpBC,WAAY,GACZC,kBAAmB,GACnBC,cAAe,GACfC,qBAAsB,GACtBC,UAAW,GACXC,iBAAkB,GAClBC,yBAA0B,GAC1BC,gCAAiC,GACjCC,UAAW,GACXC,iBAAkB,GAClBC,UAAW,GACXC,iBAAkB,GAClBC,SAAU,GACVC,gBAAiB,GACjBC,uBAAwB,GACxBC,8BAA+B,GAC/BC,YAAa,GACbC,eAAgB,KAEpBoC,GAAc,EAAM,GAIxBI,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAAMC,IAAI,GAAD5B,OAAIhF,EAAO,+CAA8C,CAAC2F,OAAO,CAACkB,eAA2C,OAA5BtG,QAA4B,IAA5BA,OAA4B,EAA5BA,EAA8BsG,eAAeC,KAAM,WACxIC,MAAMC,IACH,MAAMC,EAAOD,EAAIT,KACjB7F,QAAQC,IAAIsG,GACZf,EAAYe,EAAK,IAGpBC,OAAOC,IACJzG,QAAQC,IAAIwG,EAAI,GAClB,GACL,CAACnH,EAAQO,EAA6B4F,IAGzC,MAiDMiB,EAAaC,IAAA,IAAC,MAAE3C,EAAK,KAAEO,EAAI,MAAET,EAAK,SAAEY,GAAUiC,EAAA,OAClD1C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,EACjDF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,UAASC,SAAA,CAAEH,EAAM,QAClCI,EAAAA,EAAAA,KAAA,SAAOG,KAAMA,EAAMT,MAAOA,EAAOY,SAAUA,MACvC,EAoBZ,OAEFT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,UAEgBA,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAIwC,MAxBE,CAClBC,MAAO,oBACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,QACXC,QAAS,QAkB0B/C,SAAC,iCACxBC,EAAAA,EAAAA,KAACsC,EAAU,CACX1C,MAAM,OACNO,KAAK,OACLT,MAAO1D,EAAeG,KACtBmE,SAAWC,GACPtE,GAAmBuD,IAAQ,IACxBA,EACHrD,KAAMoE,EAAEC,OAAOd,aAInBM,EAAAA,EAAAA,KAACsC,EAAU,CACX1C,MAAM,OACNO,KAAK,OACLT,MAAO1D,EAAeI,KACtBkE,SAAWC,GACPtE,GAAmBuD,IAAQ,IACxBA,EACHpD,KAAMmE,EAAEC,OAAOd,YAIlBC,EAAc,6BAA8B,iBAC5CA,EAAc,8BAA+B,sBAC7CA,EAAc,qCAAsC,oBACpDA,EAAc,oBAAqB,iBACnCA,EAAc,yBAA0B,cACxCA,EACD,4DACA,gBAECA,EAAc,sCAAuC,gBACrDA,EAAc,6BAA8B,mBAC5CA,EAAc,4BAA6B,gBAC3CA,EAAc,OAAQ,cACtBA,EACD,yCACA,iBAECA,EAAc,yBAA0B,aACxCA,EAAc,qCAAsC,eACpDA,EAAc,6BAA8B,cAC5CA,EACD,wDACA,iBAECA,EAAc,wCAAyC,aACvDA,EACD,qCACA,4BAECA,EACD,oDACA,aAECA,EAAc,6CAA8C,aAC5DA,EAAc,aAAc,YAC5BA,EAAc,sCAAuC,2BACtDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8CAA6CC,SAAA,EAC5DF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,QAAO,+DACVC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,UAEVC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACvCC,EAAAA,EAAAA,KAAA,YACAF,UAAU,WACVJ,MAAO1D,EAAemD,YACtBmB,SAAWC,GACPd,EAAqB,cAAec,EAAEC,OAAOd,eAKrDG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,UAASC,SAAC,sCAC3BC,EAAAA,EAAAA,KAAA,SACIG,KAAK,OACLqC,MA7FC,CACjBO,OAAQ,OACRC,aAAc,gCACdC,QAAS,QA2FOvD,MAAO1D,EAAeoD,eACtBkB,SAAWC,GACXtE,GAAmBuD,IAAQ,IACpBA,EACHJ,eAAgBmB,EAAEC,OAAOd,qBAOrCG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAE9BwB,IACGvB,EAAAA,EAAAA,KAAA,UAAQe,QAASY,EAAY5B,SAAC,WAEhCwB,IACEvB,EAAAA,EAAAA,KAAA,UAAQe,QAhLLmC,KAEnBtH,QAAQC,IAAgC,OAA5BJ,QAA4B,IAA5BA,OAA4B,EAA5BA,EAA8BsG,gBAE1C,MAAMoB,EAAS,IACRnH,EACH+F,eAA2C,OAA5BtG,QAA4B,IAA5BA,OAA4B,EAA5BA,EAA8BsG,eAC7CqB,UAAoB,OAAV9H,QAAU,IAAVA,OAAU,EAAVA,EAAY+H,SACtBrB,KAAK,SAITpG,QAAQC,IAAIsH,EAAS,YAErBtB,EAAAA,EAAMyB,KAAK,GAADpD,OAAIhF,EAAO,+CAA+CiI,GACnElB,MAAMC,IACH,MAAO/B,EAAMoD,GAAW,CAACC,OAAOC,KAAKvB,EAAIT,MAAM,GAAI+B,OAAOE,OAAOxB,EAAIT,MAAM,IAC3EzG,EAAS,CAAEmF,KAAM,QAAST,MAAO,CAAE6D,UAASpD,UAC5CmB,GAAaI,IAASA,IACtBC,GAAa,IAEZS,OAAOC,GAAQzG,QAAQC,IAAIwG,IAAK,EA2JStC,SAAC,cAItCoB,EAASwC,QAAU,IAChB3D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,CAACC,QAASpD,EAAcqD,QAAS3C,KAG/CnB,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CAACC,QAASzI,EAAMgI,QAASvB,KAAMzG,EAAM4E,SAGlD,C","sources":["IP_Workbench/Nurse/IP_NursePreoperativeChecklist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactGrid from '../../OtherComponent/ReactGrid/ReactGrid';\r\nimport axios from 'axios';\r\nimport ToastAlert from '../../OtherComponent/ToastContainer/ToastAlert';\r\nimport { IconButton } from '@mui/material';\r\nimport '../../OtManagement/OtManagement.css';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\n\r\nconst IP_NursePreoperativeChecklist = () => {\r\n    const dispatch = useDispatch();\r\n    const UrlLink = useSelector(state => state.userRecord?.UrlLink);\r\n    const toast = useSelector(state => state.userRecord?.toast);\r\n    const IP_DoctorWorkbenchNavigation = useSelector(state => state.Frontoffice?.IP_DoctorWorkbenchNavigation);\r\n    console.log(IP_DoctorWorkbenchNavigation,'IP_DoctorWorkbenchNavigation');\r\n\r\n    const userRecord = useSelector((state) => state.userRecord?.UserData);\r\n\r\n\r\n    const formatLabel = (label) => {\r\n\r\n        if (/[a-z]/.test(label) && /[A-Z]/.test(label) && !/\\d/.test(label)) {\r\n            return label\r\n                .replace(/([a-z])([A-Z])/g, \"$1 $2\")\r\n                .replace(/^./, (str) => str.toUpperCase());\r\n        } else {\r\n            return label;\r\n        }\r\n    };\r\n\r\n    const [selectedOption, setSelectedOption] = useState({\r\n        Date: \"\",\r\n        Time: \"\",\r\n        OperativeArea: \"\",\r\n        OperativeAreaRemarks: \"\",\r\n        Operativeinspected: \"\",\r\n        OperativeinspectedRemarks: \"\",\r\n        JewelleryRemoved: \"\",\r\n        JewelleryRemovedRemarks: \"\",\r\n        JewelleryTied: \"\",\r\n        JewelleryTiesRemarks: \"\",\r\n        NasogastricTube: \"\",\r\n        NasogastricTubeRemarks: \"\",\r\n        Falsetooth: \"\",\r\n        FalsetoothRemarks: \"\",\r\n        ColouredNail: \"\",\r\n        ColouredNailRemarks: \"\",\r\n        HairPrepared: \"\",\r\n        HairPreparedRemarks: \"\",\r\n        VoidedAmount: \"\",\r\n        VoidedAmountRemarks: \"\",\r\n        VoidedTime: \"\",\r\n        VoidedTimeRemarks: \"\",\r\n        VaginalDouche: \"\",\r\n        VaginalDoucheRemarks: \"\",\r\n        Allergies: \"\",\r\n        AllergiesRemarks: \"\",\r\n        BathTaken: \"\",\r\n        BathTakenRemarks: \"\",\r\n        BloodRequirement: \"\",\r\n        BloodRequirementRemarks: \"\",\r\n        ConsentForm: \"\",\r\n        ConsentFormRemarks: \"\",\r\n        MorningTPR: \"\",\r\n        MorningTPRRemarks: \"\",\r\n        MorningSample: \"\",\r\n        MorningSampleRemarks: \"\",\r\n        XRayFilms: \"\",\r\n        XRayFilmsRemarks: \"\",\r\n        PreanaestheticMedication: \"\",\r\n        PreanaestheticMedicationRemarks: \"\",\r\n        SideRails: \"\",\r\n        SideRailsRemarks: \"\",\r\n        PulseRate: \"\",\r\n        PulseRateRemarks: \"\",\r\n        RespRate: \"\",\r\n        RespRateRemarks: \"\",\r\n        IdentificationWristlet: \"\",\r\n        IdentificationWristletRemarks: \"\",\r\n        SpecialDrug: \"\",\r\n        DutySisterName: \"\",\r\n    \r\n    \r\n    });\r\n\r\n    const handleCheckboxChange = (name, option) => {\r\n        setSelectedOption((prevData) => ({\r\n          ...prevData,\r\n          [name]: option,\r\n        }));\r\n    };\r\n    \r\n      const handleTextareaChange = (name, value) => {\r\n        setSelectedOption((prevData) => ({\r\n          ...prevData,\r\n          [name]: value,\r\n        }));\r\n    };\r\n\r\n\r\n    const renderSection = (label, name) => (\r\n        <div className=\"OtMangementForm_1 djkwked675 dedwe\">\r\n          <label className=\"jewj33j\">\r\n            {label}\r\n            <span>:</span>\r\n          </label>\r\n          <div className=\"OtMangementForm_1_checkbox\">\r\n            <label htmlFor={`${name}Yes`}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`${name}Yes`}\r\n                name={name}\r\n                value=\"Yes\"\r\n                checked={selectedOption[name] === \"Yes\"}\r\n                onChange={() => handleCheckboxChange(name, \"Yes\")}\r\n              />\r\n              Yes\r\n            </label>\r\n            <label htmlFor={`${name}No`}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`${name}No`}\r\n                name={name}\r\n                value=\"No\"\r\n                checked={selectedOption[name] === \"No\"}\r\n                onChange={() => handleCheckboxChange(name, \"No\")}\r\n              />\r\n              No\r\n            </label>\r\n    \r\n            <div className=\"EWFERYU7KUILP7\">\r\n              <label>\r\n                Remarks<span>:</span>\r\n              </label>\r\n              <textarea\r\n                value={selectedOption[`${name}Remarks`]}\r\n                onChange={(e) =>\r\n                  handleTextareaChange(`${name}Remarks`, e.target.value)\r\n                }\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n\r\n    const PreOpColumns = [\r\n        {\r\n            key: 'id',\r\n            name: 'S.No',\r\n            frozen: true\r\n        },\r\n        {\r\n            key: 'view',\r\n            frozen: true,\r\n            name: 'View',\r\n            renderCell: (params) => (\r\n              <IconButton onClick={() => handleView(params.row)}>\r\n                <VisibilityIcon />\r\n              </IconButton>\r\n            ),\r\n          },\r\n        \r\n        { key: 'VisitId', name: 'VisitId',frozen: true },\r\n        { key: 'PrimaryDoctorName', name: 'Doctor Name',frozen: true },\r\n      \r\n        {\r\n            key: 'Date',\r\n            name: 'Date',\r\n            frozen: true\r\n        },\r\n        {\r\n            key: 'Time',\r\n            name: 'Time',\r\n            frozen: true\r\n        },\r\n       \r\n       \r\n        \r\n    ]\r\n\r\n\r\n    \r\n    const [gridData, setGridData] = useState([])\r\n    const [IsGetData, setIsGetData] = useState(false)\r\n\r\n    const [IsViewMode, setIsViewMode] = useState(false)\r\n  \r\n    \r\n    // const handleView = (data) => {\r\n    //     setSelectedOption({\r\n    //         Date: data.Date || '',\r\n    //         Time: data.Time || '',\r\n    //         OperativeArea: data.OperativeArea || '',\r\n    //         OperativeAreaRemarks: data.OperativeAreaRemarks || '',\r\n    //         Operativeinspected: data.Operativeinspected || '',\r\n    //         OperativeinspectedRemarks: data.OperativeinspectedRemarks || '',\r\n    //         JewelleryRemoved: data.JewelleryRemoved || '',\r\n    //         JewelleryRemovedRemarks: data.JewelleryRemovedRemarks || '',\r\n    //         JewelleryTied: data.JewelleryTied || '',\r\n    //         JewelleryTiesRemarks: data.JewelleryTiesRemarks || '',\r\n    //         NasogastricTube: data.NasogastricTube || '',\r\n    //         NasogastricTubeRemarks: data.NasogastricTubeRemarks || '',\r\n    //         Falsetooth: data.Falsetooth || '',\r\n    //         FalsetoothRemarks: data.FalsetoothRemarks || '',\r\n    //         ColouredNail: data.ColouredNail || '',\r\n    //         ColouredNailRemarks: data.ColouredNailRemarks || '',\r\n    //         HairPrepared: data.HairPrepared || '',\r\n    //         HairPreparedRemarks: data.HairPreparedRemarks || '',\r\n    //         VoidedAmount: data.VoidedAmount || '',\r\n    //         VoidedAmountRemarks: data.VoidedAmountRemarks || '',\r\n    //         VoidedTime: data.VoidedTime || '',\r\n    //         VoidedTimeRemarks: data.VoidedTimeRemarks || '',\r\n    //         VaginalDouche: data.VaginalDouche || '',\r\n    //         VaginalDoucheRemarks: data.VaginalDoucheRemarks || '',\r\n    //         Allergies: data.Allergies || '',\r\n    //         AllergiesRemarks: data.AllergiesRemarks || '',\r\n    //         BathTaken: data.BathTaken || '',\r\n    //         BathTakenRemarks: data.BathTakenRemarks || '',\r\n    //         BloodRequirement: data.BloodRequirement || '',\r\n    //         BloodRequirementRemarks: data.BloodRequirementRemarks || '',\r\n    //         ConsentForm: data.ConsentForm || '',\r\n    //         ConsentFormRemarks: data.ConsentFormRemarks || '',\r\n    //         MorningTPR: data.MorningTPR || '',\r\n    //         MorningTPRRemarks: data.MorningTPRRemarks || '',\r\n    //         MorningSample: data.MorningSample || '',\r\n    //         MorningSampleRemarks: data.MorningSampleRemarks || '',\r\n    //         XRayFilms: data.XRayFilms || '',\r\n    //         XRayFilmsRemarks: data.XRayFilmsRemarks || '',\r\n    //         PreanaestheticMedication: data.PreanaestheticMedication || '',\r\n    //         PreanaestheticMedicationRemarks: data.PreanaestheticMedicationRemarks || '',\r\n    //         SideRails: data.SideRails || '',\r\n    //         SideRailsRemarks: data.SideRailsRemarks || '',\r\n    //         PulseRate: data.PulseRate || '',\r\n    //         PulseRateRemarks: data.PulseRateRemarks || '',\r\n    //         RespRate: data.RespRate || '',\r\n    //         RespRateRemarks: data.RespRateRemarks || '',\r\n    //         IdentificationWristlet: data.IdentificationWristlet || '',\r\n    //         IdentificationWristletRemarks: data.IdentificationWristletRemarks || '',\r\n    //         SpecialDrug: data.SpecialDrug || '',\r\n    //         DutySisterName: data.DutySisterName || '',\r\n    //     });\r\n    //     setIsViewMode(true);\r\n    // };\r\n    \r\n\r\n\r\n\r\n    const handleView = (data) => {\r\n        setSelectedOption((prev) => ({\r\n            ...prev,\r\n            ...data // Spread the data object to update only changed values\r\n        }));\r\n        setIsViewMode(true);\r\n    };\r\n\r\n    \r\n    \r\n    const handleClear = () => {\r\n        setSelectedOption({\r\n            Date: '',\r\n            Time: '',\r\n            OperativeArea: '',\r\n            OperativeAreaRemarks: '',\r\n            Operativeinspected: '',\r\n            OperativeinspectedRemarks: '',\r\n            JewelleryRemoved: '',\r\n            JewelleryRemovedRemarks: '',\r\n            JewelleryTied: '',\r\n            JewelleryTiesRemarks: '',\r\n            NasogastricTube: '',\r\n            NasogastricTubeRemarks: '',\r\n            Falsetooth: '',\r\n            FalsetoothRemarks: '',\r\n            ColouredNail: '',\r\n            ColouredNailRemarks: '',\r\n            HairPrepared: '',\r\n            HairPreparedRemarks: '',\r\n            VoidedAmount: '',\r\n            VoidedAmountRemarks: '',\r\n            VoidedTime: '',\r\n            VoidedTimeRemarks: '',\r\n            VaginalDouche: '',\r\n            VaginalDoucheRemarks: '',\r\n            Allergies: '',\r\n            AllergiesRemarks: '',\r\n            BathTaken: '',\r\n            BathTakenRemarks: '',\r\n            BloodRequirement: '',\r\n            BloodRequirementRemarks: '',\r\n            ConsentForm: '',\r\n            ConsentFormRemarks: '',\r\n            MorningTPR: '',\r\n            MorningTPRRemarks: '',\r\n            MorningSample: '',\r\n            MorningSampleRemarks: '',\r\n            XRayFilms: '',\r\n            XRayFilmsRemarks: '',\r\n            PreanaestheticMedication: '',\r\n            PreanaestheticMedicationRemarks: '',\r\n            SideRails: '',\r\n            SideRailsRemarks: '',\r\n            PulseRate: '',\r\n            PulseRateRemarks: '',\r\n            RespRate: '',\r\n            RespRateRemarks: '',\r\n            IdentificationWristlet: '',\r\n            IdentificationWristletRemarks: '',\r\n            SpecialDrug: '',\r\n            DutySisterName: '',\r\n        });\r\n        setIsViewMode(false);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        axios.get(`${UrlLink}Ip_Workbench/IP_PreOpChecklist_Details_Link`,{params:{RegistrationId:IP_DoctorWorkbenchNavigation?.RegistrationId,Type: 'Nurse'}})\r\n            .then((res) => {\r\n                const ress = res.data\r\n                console.log(ress)\r\n                setGridData(ress)\r\n    \r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n      }, [UrlLink,IP_DoctorWorkbenchNavigation,IsGetData])\r\n    \r\n    \r\n      const handleSubmit = () => {\r\n        \r\n        console.log(IP_DoctorWorkbenchNavigation?.RegistrationId);\r\n        \r\n        const senddata={\r\n            ...selectedOption,\r\n            RegistrationId:IP_DoctorWorkbenchNavigation?.RegistrationId,\r\n            Createdby:userRecord?.username,\r\n            Type:'Nurse'\r\n            \r\n        }\r\n\r\n        console.log(senddata,'senddata');\r\n        \r\n        axios.post(`${UrlLink}Ip_Workbench/IP_PreOpChecklist_Details_Link`, senddata)\r\n        .then((res) => {\r\n            const [type, message] = [Object.keys(res.data)[0], Object.values(res.data)[0]];\r\n            dispatch({ type: 'toast', value: { message, type } });\r\n            setIsGetData(prev => !prev);\r\n            handleClear();\r\n            })\r\n            .catch((err) => console.log(err));\r\n        \r\n    }\r\n\r\n\r\n    // const Checkbox = ({ id, name, value, checked, onChange, label }) => (\r\n    //     <label htmlFor={id}>\r\n    //       <input\r\n    //         type=\"checkbox\"\r\n    //         id={id}\r\n    //         name={name}\r\n    //         value={value}\r\n    //         checked={checked}\r\n    //         onChange={onChange}\r\n    //       />\r\n    //       {label}\r\n    //     </label>\r\n    //   );\r\n      \r\n    //   const RemarksTextarea = ({ value, onChange }) => (\r\n    //     <div className=\"EWFERYU7KUILP7\">\r\n    //       <label>\r\n    //         Remarks<span>:</span>\r\n    //       </label>\r\n    //       <textarea value={value} onChange={onChange}></textarea>\r\n    //     </div>\r\n    //   );\r\n      \r\n      const InputField = ({ label, type, value, onChange }) => (\r\n        <div className=\"OtMangementForm_1 djkwked675 dedwe\">\r\n          <label className=\"jewj33j\">{label}:</label>\r\n          <input type={type} value={value} onChange={onChange} />\r\n        </div>\r\n      );\r\n      \r\n      const headerStyle = {\r\n        color: \"var(--labelcolor)\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"start\",\r\n        padding: \"10px\",\r\n      };\r\n      \r\n      const inputStyle = {\r\n        border: \"none\",\r\n        borderBottom: \"2px solid var(--ProjectColor)\",\r\n        outline: \"none\",\r\n      };\r\n\r\n\r\n\r\n  return (\r\n \r\n<div className='new-patient-registration-form'>\r\n<br />\r\n            \r\n                <div className=\"Supplier_Master_Container\">\r\n                <div className=\"Print_ot_all_div_rfve\">\r\n                    <h4 style={headerStyle}>Ward Preoperative Checklist</h4>\r\n                    <InputField\r\n                    label=\"Date\"\r\n                    type=\"date\"\r\n                    value={selectedOption.Date}\r\n                    onChange={(e) =>\r\n                        setSelectedOption((prevData) => ({\r\n                        ...prevData,\r\n                        Date: e.target.value,\r\n                        }))\r\n                    }\r\n                    />\r\n                    <InputField\r\n                    label=\"Time\"\r\n                    type=\"time\"\r\n                    value={selectedOption.Time}\r\n                    onChange={(e) =>\r\n                        setSelectedOption((prevData) => ({\r\n                        ...prevData,\r\n                        Time: e.target.value,\r\n                        }))\r\n                    }\r\n                    />\r\n                    {renderSection(\"1. Operative area prepared\", \"OperativeArea\")}\r\n                    {renderSection(\"2. Operative area inspected\", \"Operativeinspected\")}\r\n                    {renderSection(\"3. Jewellery Removed & handed over\", \"JewelleryRemoved\")}\r\n                    {renderSection(\"Jewellery Tied on\", \"JewelleryTied\")}\r\n                    {renderSection(\"4. False tooth removed\", \"Falsetooth\")}\r\n                    {renderSection(\r\n                    \"5. Coloured nail polish removed (from at least 2 fingers)\",\r\n                    \"ColouredNail\"\r\n                    )}\r\n                    {renderSection(\"6. Hair prepared / Hairpins removed\", \"HairPrepared\")}\r\n                    {renderSection(\"7. Nasogastric tube passed\", \"NasogastricTube\")}\r\n                    {renderSection(\"8. Voided or catheterized\", \"VoidedAmount\")}\r\n                    {renderSection(\"Time\", \"VoidedTime\")}\r\n                    {renderSection(\r\n                    \"9. Vaginal douche / Bowel wash / Enema\",\r\n                    \"VaginalDouche\"\r\n                    )}\r\n                    {renderSection(\"10. Bath taken / Given\", \"BathTaken\")}\r\n                    {renderSection(\"11. Consent form signed & attached\", \"ConsentForm\")}\r\n                    {renderSection(\"12. Morning T.P.R. charted\", \"MorningTPR\")}\r\n                    {renderSection(\r\n                    \"13. Morning Urine / Blood sample sent Report on chart\",\r\n                    \"MorningSample\"\r\n                    )}\r\n                    {renderSection(\"14. X-ray films / CT Scan / MRI Films\", \"XRayFilms\")}\r\n                    {renderSection(\r\n                    \"15. Preanaesthetic medication Time\",\r\n                    \"PreanaestheticMedication\"\r\n                    )}\r\n                    {renderSection(\r\n                    \"16. Side rails applied after giving premedication\",\r\n                    \"SideRails\"\r\n                    )}\r\n                    {renderSection(\"17. Pulse & Resp. rate 30 min after premed\", \"PulseRate\")}\r\n                    {renderSection(\"Resp. rate\", \"RespRate\")}\r\n                    {renderSection(\"18. Identification wristlet applied\", \"IdentificationWristlet\")}\r\n                    <div className=\"OtMangementForm_1 djkwked675 dedwe ueuhuedj\">\r\n                    <label className=\"jewj33j hjwqhyss\">\r\n                        <p>19.</p> Special drugs / supplies being sent with patient (specify)\r\n                        <span>:</span>\r\n                    </label>\r\n                    <div className=\"OtMangementForm_1_checkbox\">\r\n                        <textarea\r\n                        className=\"hfdtrft5\"\r\n                        value={selectedOption.SpecialDrug}\r\n                        onChange={(e) =>\r\n                            handleTextareaChange(\"SpecialDrug\", e.target.value)\r\n                        }\r\n                        ></textarea>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"OtMangementForm_1 djkwked675 dedwe\">\r\n                    <label className=\"jewj33j\">Checked by (Duty Sister Name) - </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        style={inputStyle}\r\n                        value={selectedOption.DutySisterName}\r\n                        onChange={(e) =>\r\n                        setSelectedOption((prevData) => ({\r\n                            ...prevData,\r\n                            DutySisterName: e.target.value,\r\n                        }))\r\n                        }\r\n                    />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"Main_container_Btn\">\r\n            \r\n                    {IsViewMode && (\r\n                        <button onClick={handleClear}>Clear</button>\r\n                    )}\r\n                    {!IsViewMode && (\r\n                        <button onClick={handleSubmit}>Submit</button>\r\n                    )}\r\n                </div>\r\n\r\n                {gridData.length >= 0 &&\r\n                    <ReactGrid columns={PreOpColumns} RowData={gridData} />\r\n                }\r\n\r\n                <ToastAlert Message={toast.message} Type={toast.type} />\r\n\r\n                \r\n        </div>\r\n \r\n    \r\n  )\r\n}\r\n\r\nexport default IP_NursePreoperativeChecklist;"],"names":["IP_NursePreoperativeChecklist","dispatch","useDispatch","UrlLink","useSelector","state","_state$userRecord","userRecord","toast","_state$userRecord2","IP_DoctorWorkbenchNavigation","_state$Frontoffice","Frontoffice","console","log","_state$userRecord3","UserData","selectedOption","setSelectedOption","useState","Date","Time","OperativeArea","OperativeAreaRemarks","Operativeinspected","OperativeinspectedRemarks","JewelleryRemoved","JewelleryRemovedRemarks","JewelleryTied","JewelleryTiesRemarks","NasogastricTube","NasogastricTubeRemarks","Falsetooth","FalsetoothRemarks","ColouredNail","ColouredNailRemarks","HairPrepared","HairPreparedRemarks","VoidedAmount","VoidedAmountRemarks","VoidedTime","VoidedTimeRemarks","VaginalDouche","VaginalDoucheRemarks","Allergies","AllergiesRemarks","BathTaken","BathTakenRemarks","BloodRequirement","BloodRequirementRemarks","ConsentForm","ConsentFormRemarks","MorningTPR","MorningTPRRemarks","MorningSample","MorningSampleRemarks","XRayFilms","XRayFilmsRemarks","PreanaestheticMedication","PreanaestheticMedicationRemarks","SideRails","SideRailsRemarks","PulseRate","PulseRateRemarks","RespRate","RespRateRemarks","IdentificationWristlet","IdentificationWristletRemarks","SpecialDrug","DutySisterName","handleCheckboxChange","name","option","prevData","handleTextareaChange","value","renderSection","label","_jsxs","className","children","_jsx","htmlFor","concat","type","id","checked","onChange","e","target","PreOpColumns","key","frozen","renderCell","params","IconButton","onClick","handleView","row","VisibilityIcon","gridData","setGridData","IsGetData","setIsGetData","IsViewMode","setIsViewMode","data","prev","handleClear","useEffect","axios","get","RegistrationId","Type","then","res","ress","catch","err","InputField","_ref","style","color","display","justifyContent","alignItems","textAlign","padding","border","borderBottom","outline","handleSubmit","senddata","Createdby","username","post","message","Object","keys","values","length","ReactGrid","columns","RowData","ToastAlert","Message"],"sourceRoot":""}