{"version":3,"file":"static/js/639.ce333dab.chunk.js","mappings":"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","sources":["DoctorWorkBench/Prescription.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Prescription.css\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport ToastAlert from \"../OtherComponent/ToastContainer/ToastAlert\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst Prescription = () => {\r\n\r\n  const toast = useSelector(state => state.userRecord?.toast);\r\n\r\n  const userRecord = useSelector((state) => state.userRecord?.UserData);\r\n  const DoctorWorkbenchNavigation = useSelector(state => state.Frontoffice?.DoctorWorkbenchNavigation);\r\n  const UrlLink = useSelector((state) => state.userRecord?.UrlLink);\r\n\r\n  const [type, setType] = useState(\"Intake\");\r\n\r\n  const [formDataPrescription, setFormDataPrescription] = useState({\r\n    GenericName: \"\",\r\n    ItemName: \"\",\r\n    dose: \"\",\r\n    route: \"\",\r\n    qty: \"\",\r\n    instruction: \"\",\r\n    frequency: \"\",\r\n    durationNumber: \"\",\r\n    durationUnit: \"days\",\r\n    itemtype: \"\",\r\n  });\r\n\r\n  const dispatchvalue = useDispatch();\r\n\r\n  const [selectedMedicines, setSelectedMedicines] = useState([]);\r\n  const [issuedmedicine, setIssuedmedicine] = useState({});\r\n  const [prevmedicine, setPrevmedicine] = useState({});\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [genericName, setgenericName] = useState([]);\r\n\r\n\r\n  const handlePageChange = (event, newType) => {\r\n    if (newType !== null && newType !== type) {\r\n      setType(newType);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${UrlLink}Workbench/Medical_Stock_InsetLink_for_Prescription`)\r\n      .then((response) => {\r\n        console.log('response.data',);\r\n        console.log('response.data', response.data);\r\n        setgenericName(response.data)\r\n\r\n        // Process the response data as needed\r\n        // setgenericName(response.data.Generic_Name);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching generic names:\", error);\r\n        // Handle the error, e.g., show an error message to the user\r\n      });\r\n  }, [UrlLink]);\r\n\r\n  \r\n  const [IsViewMode, setIsViewMode] = useState(false)\r\n\r\n\r\n\r\n\r\n  console.log('genericName', genericName);\r\n\r\n\r\n\r\n  const handleClear = () => {\r\n    setFormDataPrescription({\r\n      GenericName: '',\r\n      ItemName: '',\r\n      dose: '',\r\n      route: '',\r\n      qty: '',\r\n      instruction: '',\r\n      frequency: '',\r\n      durationNumber: '',\r\n      durationUnit: 'days',\r\n      itemtype: '',\r\n    });\r\n    setIsViewMode(false);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${UrlLink}Workbench/Workbench_Prescription_Details`, { params: { RegistrationId: DoctorWorkbenchNavigation?.pk } })\r\n      .then((res) => {\r\n        const ress = res.data\r\n        console.log(res);\r\n        setIssuedmedicine(ress)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }, [DoctorWorkbenchNavigation?.RegistrationId, UrlLink])\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${UrlLink}Workbench/Doctor_previous_prescripion_details`, { params: { RegistrationId: DoctorWorkbenchNavigation?.pk } })\r\n      .then((response) => {\r\n        console.log('response.data', response.data);\r\n\r\n        setPrevmedicine(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching UOM:\", error);\r\n      });\r\n  }, [DoctorWorkbenchNavigation, UrlLink]);\r\n\r\n\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n\r\n    setFormDataPrescription({\r\n      ...formDataPrescription,\r\n      [name]: value,\r\n    });\r\n    const { frequency, durationNumber, durationUnit, itemtype, GenericName } = {\r\n      ...formDataPrescription,\r\n      [name]: value,\r\n    };\r\n    if (name === \"GenericName\" && value === \"\") {\r\n\r\n      setFormDataPrescription({\r\n        GenericName: \"\",\r\n        ItemName: \"\",\r\n        dose: \"\",\r\n        route: \"\",\r\n        qty: \"\",\r\n        instruction: \"\",\r\n        frequency: \"\",\r\n        durationNumber: \"\",\r\n        durationUnit: \"days\",\r\n        itemtype: \"\"\r\n      });\r\n    }\r\n\r\n    if (name === \"GenericName\") {\r\n      genericName.filter((p) => p.Generic_Name === GenericName).map((item) => (\r\n        setFormDataPrescription(prev => ({\r\n          ...prev,\r\n          ItemName: item.Generic_Name,\r\n          itemtype: item.Item_Type,\r\n          dose: item.Dosage\r\n        }))\r\n      ))\r\n    }\r\n\r\n    if (itemtype === \"Tablets\" || itemtype === \"TABLET\") {\r\n      console.log(\"hiiii\");\r\n      if ([\"frequency\", \"durationNumber\", \"durationUnit\"].includes(name)) {\r\n        if (!durationNumber || !durationUnit) {\r\n          setFormDataPrescription((prevData) => ({\r\n            ...prevData,\r\n            qty: \"\",\r\n          }));\r\n          return;\r\n        }\r\n\r\n\r\n        const [morning, afternoon, night] = frequency.split(\"-\");\r\n\r\n        let times1 = parseInt(morning) + parseInt(afternoon) + parseInt(night);\r\n        let times = 1;\r\n        switch (durationUnit) {\r\n          case \"days\":\r\n            times = parseInt(durationNumber);\r\n            break;\r\n          case \"weeks\":\r\n            times = parseInt(durationNumber) * 7;\r\n            break;\r\n          case \"months\":\r\n            times = parseInt(durationNumber) * 30;\r\n            break;\r\n\r\n          default:\r\n            return;\r\n        }\r\n\r\n        const qty = times1 * times;\r\n\r\n        setFormDataPrescription((prevData) => ({\r\n          ...prevData,\r\n          qty: qty,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const addMedicine = () => {\r\n\r\n    const medicineData = {\r\n      id: selectedMedicines.length + 1,\r\n      ...formDataPrescription,\r\n\r\n    };\r\n\r\n    const isDuplicate = selectedMedicines.some(\r\n      (medicine) => medicine.ItemName === medicineData.ItemName\r\n    );\r\n\r\n    if (isDuplicate) {\r\n      const tdata = {\r\n        message: 'Medicine with the same Item Name is already added',\r\n        type: 'warn',\r\n      }\r\n      dispatchvalue({ type: 'toast', value: tdata });\r\n\r\n    } else {\r\n      setSelectedMedicines([...selectedMedicines, medicineData]);\r\n    }\r\n    setFormDataPrescription({\r\n      GenericName: \"\",\r\n      ItemName: \"\",\r\n      dose: \"\",\r\n      route: \"\",\r\n      qty: \"\",\r\n      instruction: \"\",\r\n      frequency: \"\",\r\n      durationNumber: \"\",\r\n      durationUnit: \"days\",\r\n      itemtype: \"\"\r\n    });\r\n\r\n  };\r\n\r\n  const updateMedicine = () => {\r\n    // if (!validateForm()) {\r\n    //   return;\r\n    // }\r\n\r\n    const updatedMedicines = [...selectedMedicines];\r\n    updatedMedicines[editIndex] = {\r\n      id: selectedMedicines[editIndex].id,\r\n      ...formDataPrescription,\r\n\r\n    };\r\n\r\n    setSelectedMedicines(updatedMedicines);\r\n    setEditIndex(null);\r\n\r\n    // Clear form data after updating\r\n    setFormDataPrescription({\r\n      GenericName: \"\",\r\n      ItemName: \"\",\r\n      dose: \"\",\r\n      route: \"\",\r\n      qty: \"\",\r\n      instruction: \"\",\r\n      frequency: \"\",\r\n      durationNumber: \"\",\r\n      durationUnit: \"days\",\r\n      itemtype: \"\",\r\n    });\r\n  };\r\n  const addprevmedicine = (index, summa) => {\r\n    const prevMedicine = prevmedicine[summa][index];\r\n    console.log('prevMedicine', prevMedicine);\r\n\r\n    setFormDataPrescription({\r\n      GenericName: prevMedicine.GenericName,\r\n      ItemName: prevMedicine.ItemName,\r\n      dose: prevMedicine.Dose,\r\n      route: prevMedicine.Route,\r\n      qty: prevMedicine.Qty,\r\n      instruction: prevMedicine.Instruction,\r\n      frequency: prevMedicine.Frequency,\r\n      durationNumber: prevMedicine.DurationNumber,\r\n      durationUnit: \"days\",\r\n      itemtype: prevMedicine.Itemtype,\r\n    });\r\n    setEditIndex(null); // Set to null since it's a new addition, not an edit\r\n  };\r\n\r\n  const handleEditMedicine = (index) => {\r\n    // Set form data with selected medicine for editing\r\n    const selectedMedicine = selectedMedicines[index];\r\n    setFormDataPrescription({ ...selectedMedicine });\r\n    setEditIndex(index);\r\n  };\r\n\r\n  const handleDeleteMedicine = (index) => {\r\n    const updatedMedicines = selectedMedicines.filter((_, i) => i !== index);\r\n    setSelectedMedicines(updatedMedicines);\r\n    setEditIndex(null);\r\n  };\r\n\r\n\r\n\r\n  const handleSubmitButtonClick = () => {\r\n    // Map the selectedMedicines array to the format expected by the backend\r\n    const dataToSend = selectedMedicines.map((p) => ({\r\n      RegistrationId: DoctorWorkbenchNavigation?.pk,\r\n      created_by: userRecord?.username || '',\r\n      GenericName: p.GenericName,\r\n      ItemName: p.ItemName,\r\n      itemtype: p.itemtype,\r\n      dose: p.dose,\r\n      route: p.route,\r\n      frequency: p.frequency,\r\n      duration: `${p.durationNumber} ${p.durationUnit}`,\r\n      qty: p.qty,\r\n      instruction: p.instruction,\r\n      Doctor_id: DoctorWorkbenchNavigation?.DoctorName\r\n    }));\r\n\r\n    console.log(dataToSend, 'dataToSend');\r\n\r\n    if (dataToSend.length !== 0) {\r\n      axios\r\n        .post(`${UrlLink}Workbench/Workbench_Prescription_Details`, dataToSend)\r\n        .then((response) => {\r\n          if (response.data.duplicate_item_names) {\r\n            const duplicateItems = response.data.duplicate_item_names.join(\", \");\r\n            const tdata = {\r\n              message: `Duplicate ItemNames found: ${duplicateItems}`,\r\n              type: 'warn',\r\n            }\r\n            dispatchvalue({ type: 'toast', value: tdata });\r\n\r\n            // warnmsg(`Duplicate ItemNames found: ${duplicateItems}`);\r\n\r\n          } else {\r\n            console.log(response.data.message);\r\n            // successMsg(response.data.message);\r\n            setSelectedMedicines([]);\r\n\r\n            // setIsGetData(prev => !prev);\r\n\r\n\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    } else {\r\n      const tdata = {\r\n        message: 'No Prescription Data To Save',\r\n        type: 'warn',\r\n      }\r\n      dispatchvalue({ type: 'toast', value: tdata });\r\n\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"for\">\r\n      <div className=\"RegisFormcon\">\r\n        <div style={{ width: \"100%\", display: \"grid\", placeItems: \"center\" }}>\r\n          <ToggleButtonGroup\r\n            value={type}\r\n            exclusive\r\n            onChange={handlePageChange}\r\n            aria-label=\"Platform\"\r\n          >\r\n            <ToggleButton\r\n              value=\"Intake\"\r\n              style={{\r\n                height: \"30px\",\r\n                width: \"180px\",\r\n                backgroundColor:\r\n                  type === \"Intake\"\r\n                    ? \"var(--selectbackgroundcolor)\"\r\n                    : \"inherit\",\r\n              }}\r\n              className=\"togglebutton_container\"\r\n            >\r\n              Add Drugs\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value=\"Output\"\r\n              style={{\r\n                backgroundColor:\r\n                  type === \"Output\"\r\n                    ? \"var(--selectbackgroundcolor)\"\r\n                    : \"inherit\",\r\n                width: \"180px\",\r\n                height: \"30px\",\r\n              }}\r\n              className=\"togglebutton_container\"\r\n            >\r\n              View Drugs\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n        {type === \"Intake\" && (\r\n          <>\r\n            <div className=\"RegisFormcon\">\r\n\r\n\r\n\r\n              {Object.keys(prevmedicine).length > 0 ? (\r\n                <div className=\"for\">\r\n                  {Object.entries(prevmedicine).map(([createdBy, prescriptions]) => (\r\n                    <div key={createdBy} className=\"Add_items_Purchase_Master\">\r\n                      <span>{`Given Medicine by Dr.${createdBy}`}</span>\r\n                      <div className=\"Selected-table-container\">\r\n                        <table className=\"selected-medicine-table2\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th id=\"slectbill_ins\">GenericName</th>\r\n                              <th id=\"slectbill_ins\">ItemName</th>\r\n                              <th id=\"slectbill_ins\">Item Type</th>\r\n                              <th id=\"slectbill_ins\">Dose</th>\r\n                              <th id=\"slectbill_ins\">Route</th>\r\n                              <th id=\"slectbill_ins\">Frequency</th>\r\n                              <th id=\"slectbill_ins\">Duration</th>\r\n                              <th id=\"slectbill_ins\">Qty</th>\r\n                              <th id=\"slectbill_ins\">Instruction</th>\r\n                              <th id=\"slectbill_ins\">Action</th>\r\n\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {prescriptions.map((issuedinfo, index) => (\r\n                              <tr key={index}>\r\n                                <td>{issuedinfo.GenericName}</td>\r\n                                <td>{issuedinfo.ItemName}</td>\r\n                                <td>{issuedinfo.Itemtype}</td>\r\n                                <td>{issuedinfo.Dose}</td>\r\n                                <td>{issuedinfo.Route}</td>\r\n                                <td>{issuedinfo.Frequency}</td>\r\n                                <td>{`${issuedinfo.DurationNumber} ${issuedinfo.DurationUnit}`}</td>\r\n                                <td>{issuedinfo.Qty}</td>\r\n                                <td>{issuedinfo.Instruction}</td>\r\n                                <td>\r\n                                  <button\r\n                                    className=\"delnamebtn\"\r\n                                    onClick={() => addprevmedicine(index, createdBy)}\r\n                                  >\r\n                                    <AddIcon />\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"DivCenter_container\">\r\n                No medication was issued during the previous visit.\r\n                </div>\r\n              )\r\n              }\r\n\r\n              <br></br>\r\n             \r\n              <div className=\"RegisFormcon_1\">\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"title\">\r\n                    Generic Name<span>:</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"medicine\"\r\n                    name=\"GenericName\"\r\n                    value={formDataPrescription.GenericName}\r\n                    onChange={handleChange}\r\n                    list=\"GenericName-options\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <datalist id=\"GenericName-options\">\r\n                    <option value=\"\">Select</option>\r\n                    {genericName.map((item, index) => (\r\n                      <option key={index} value={item.Generic_Name}></option>\r\n                    ))}\r\n                  </datalist>\r\n                </div>\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"title\">\r\n                    Item Name<span>:</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"medicine\"\r\n                    name=\"ItemName\"\r\n                    value={formDataPrescription.ItemName}\r\n                    onChange={handleChange}\r\n                    list=\"ItemName-options\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {/* <datalist id=\"ItemName-options\">\r\n                    <option value=\"\">Select</option>\r\n                    {itemName.map((item, index) => (\r\n                      <option key={index} value={item.ItemName}>\r\n                        {`${item.ItemCode} | Av.Qty : ${item.AvailableQuantity} `}\r\n                      </option>\r\n                    ))}\r\n                  </datalist> */}\r\n                </div>\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"itemtype\">\r\n                    Item Type<span>:</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"itemtype\"\r\n                    name=\"itemtype\"\r\n                    value={formDataPrescription.itemtype}\r\n                    onChange={handleChange}\r\n                  // readOnly\r\n                  />\r\n                </div>\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"dose\">\r\n                    Dose<span>:</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"dose\"\r\n                    name=\"dose\"\r\n                    value={formDataPrescription.dose}\r\n                    onChange={handleChange}\r\n                  // readOnly\r\n                  />\r\n                </div>\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"title\">\r\n                    Route<span>:</span>\r\n                  </label>\r\n                  <select\r\n                    id=\"route\"\r\n                    name=\"route\"\r\n                    value={formDataPrescription.route}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"Oral\">Oral</option>\r\n                    <option value=\"Injection\">Injection</option>\r\n                    <option value=\"External\">External</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"notes\">\r\n                    Frequency<span>:</span>\r\n                  </label>\r\n                  <select\r\n                    id=\"frequency\"\r\n                    name=\"frequency\"\r\n                    rows=\"2\"\r\n                    value={formDataPrescription.frequency}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"0-0-1\">0-0-1</option>\r\n                    <option value=\"0-1-1\">0-1-1</option>\r\n                    <option value=\"1-1-1\">1-1-1</option>\r\n                    <option value=\"1-1-0\">1-1-0</option>\r\n                    <option value=\"1-0-1\">1-0-1</option>\r\n                    <option value=\"SOS\">SOS</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"duration\">\r\n                    Duration<span>:</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"durationNumber\"\r\n                    name=\"durationNumber\"\r\n                    className=\"dura_with1\"\r\n                    value={formDataPrescription.durationNumber}\r\n                    onChange={handleChange}\r\n                    disabled={formDataPrescription.frequency === 'SOS'}\r\n                  ></input>\r\n                  <select\r\n                    id=\"durationUnit\"\r\n                    name=\"durationUnit\"\r\n                    className=\"dura_with\"\r\n                    value={formDataPrescription.durationUnit}\r\n                    onChange={handleChange}\r\n                    disabled={formDataPrescription.frequency === 'SOS'}\r\n                  >\r\n                    {/* <option value=\"\">Select</option> */}\r\n                    <option value=\"days\">Days</option>\r\n                    <option value=\"weeks\">Weeks</option>\r\n                    <option value=\"months\">Months</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"title\">\r\n                    Qty<span>:</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"qty\"\r\n                    name=\"qty\"\r\n                    value={formDataPrescription.qty}\r\n                    onChange={handleChange}\r\n                    readOnly={\r\n                      (formDataPrescription.itemtype === \"Tablets\" ||\r\n                        formDataPrescription.itemtype === \"Tablet\") &&\r\n                      formDataPrescription.itemtype !== \"\"\r\n                    }\r\n                    disabled={formDataPrescription.frequency === 'SOS'}\r\n                  />\r\n                </div>\r\n                <div className=\"RegisForm_1\">\r\n                  <label htmlFor=\"instruction\">\r\n                    Instruction<span>:</span>\r\n                  </label>\r\n                  <textarea\r\n                    id=\"instruction\"\r\n                    name=\"instruction\"\r\n                    rows=\"2\"\r\n                    value={formDataPrescription.instruction}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              <div className=\"Main_container_Btn\">\r\n                <button\r\n                  className=\"RegisterForm_1_btns\"\r\n                  type=\"button\"\r\n                  onClick={editIndex !== null ? updateMedicine : addMedicine}\r\n                >\r\n                  {editIndex !== null ? \"Update \" : \"Add \"}\r\n                </button>\r\n              </div>\r\n              {selectedMedicines.length > 0 && (\r\n                <div className=\"for\">\r\n                  <div className=\"Add_items_Purchase_Master\">\r\n                    <span>Selected Medicine</span>\r\n                  </div>\r\n                  <div className=\"Selected-table-container\">\r\n                    <table className=\"selected-medicine-table2\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th id=\"slectbill_ins\">GenericName</th>\r\n                          <th id=\"slectbill_ins\">ItemName</th>\r\n                          <th id=\"slectbill_ins\">Item Type</th>\r\n                          <th id=\"slectbill_ins\">Dose</th>\r\n                          <th id=\"slectbill_ins\">Route</th>\r\n                          <th id=\"slectbill_ins\">Frequency</th>\r\n                          <th id=\"slectbill_ins\">Duration</th>\r\n                          <th id=\"slectbill_ins\">Qty</th>\r\n                          <th id=\"slectbill_ins\">Instruction</th>\r\n                          <th id=\"slectbill_ins\">Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {selectedMedicines.map((medicineInfo, index) => (\r\n                          <tr key={index}>\r\n                            <td>{medicineInfo.GenericName}</td>\r\n                            <td>{medicineInfo.ItemName}</td>\r\n                            <td>{medicineInfo.itemtype}</td>\r\n                            <td>{medicineInfo.dose}</td>\r\n                            <td>{medicineInfo.route}</td>\r\n                            <td>{medicineInfo.frequency}</td>\r\n                            <td>\r\n                              {medicineInfo.durationNumber}{\" \"}\r\n                              {medicineInfo.durationUnit}\r\n                            </td>\r\n                            <td>{medicineInfo.qty}</td>\r\n                            <td>{medicineInfo.instruction}</td>\r\n                            <td>\r\n                              <button\r\n                                className=\"delnamebtn\"\r\n                                onClick={() => handleEditMedicine(index)}\r\n                              >\r\n                                <EditIcon />\r\n                              </button>\r\n                              <button\r\n                                className=\"delnamebtn\"\r\n                                onClick={() => handleDeleteMedicine(index)}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* {selectedMedicines.length > 0 && */}\r\n              {/* <div className=\"Register_btn_con\">\r\n                  <button\r\n                    className=\"RegisterForm_1_btns\"\r\n                    type=\"button\"\r\n                    onClick={handleSubmitButtonClick}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div> */}\r\n              {selectedMedicines.length > 0 &&\r\n                <div className=\"Main_container_Btn\">\r\n\r\n                  {IsViewMode && (\r\n                    <button onClick={handleClear}>Clear</button>\r\n                  )}\r\n                  {!IsViewMode && (\r\n                    <button onClick={handleSubmitButtonClick}>Submit</button>\r\n                  )}\r\n                </div>}\r\n\r\n              {/* {gridData.length > 0 &&\r\n                <ReactGrid columns={PrescriptionColumns} RowData={gridData} />\r\n              } */}\r\n\r\n              <ToastAlert Message={toast.message} Type={toast.type} />\r\n\r\n\r\n            </div>\r\n          </>\r\n        )}\r\n        {type === \"Output\" && (\r\n          <>\r\n            {Object.keys(issuedmedicine).length > 0 ? (\r\n              <div className=\"for\">\r\n                {Object.entries(issuedmedicine).map(([createdBy, prescriptions]) => (\r\n                  <div key={createdBy} className=\"Add_items_Purchase_Master\">\r\n                    <span>{`Given Medicine by Dr.${createdBy}`}</span>\r\n                    <div className=\"Selected-table-container\">\r\n                      <table className=\"selected-medicine-table2\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th id=\"slectbill_ins\">GenericName</th>\r\n                            <th id=\"slectbill_ins\">ItemName</th>\r\n                            <th id=\"slectbill_ins\">Item Type</th>\r\n                            <th id=\"slectbill_ins\">Dose</th>\r\n                            <th id=\"slectbill_ins\">Route</th>\r\n                            <th id=\"slectbill_ins\">Frequency</th>\r\n                            <th id=\"slectbill_ins\">Duration</th>\r\n                            <th id=\"slectbill_ins\">Qty</th>\r\n                            <th id=\"slectbill_ins\">Instruction</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {prescriptions.map((issuedinfo, index) => (\r\n                            <tr key={index}>\r\n                              <td>{issuedinfo.GenericName}</td>\r\n                              <td>{issuedinfo.ItemName}</td>\r\n                              <td>{issuedinfo.Itemtype}</td>\r\n                              <td>{issuedinfo.Dose}</td>\r\n                              <td>{issuedinfo.Route}</td>\r\n                              <td>{issuedinfo.Frequency}</td>\r\n                              <td>{`${issuedinfo.DurationNumber} ${issuedinfo.DurationUnit}`}</td>\r\n                              <td>{issuedinfo.Qty}</td>\r\n                              <td>{issuedinfo.Instruction}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"DivCenter_container\">\r\n              No medication was issued during the Current visit.\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n\r\n        <ToastAlert Message={toast.message} Type={toast.type} />\r\n      </div>\r\n\r\n      {/* {showConfirmationModal && ({type === \"Output\" && (\r\n  <>\r\n    {Object.keys(issuedmedicine).length > 0 ? (\r\n      <div className=\"for\">\r\n        {Object.entries(issuedmedicine).map(([createdBy, prescriptions]) => (\r\n          <div key={createdBy} className=\"Add_items_Purchase_Master\">\r\n            <span>{`Given Medicine by ${createdBy}`}</span>\r\n            <div className=\"Selected-table-container\">\r\n              <table className=\"selected-medicine-table2\">\r\n                <thead>\r\n                  <tr>\r\n                    <th id=\"slectbill_ins\">GenericName</th>\r\n                    <th id=\"slectbill_ins\">ItemName</th>\r\n                    <th id=\"slectbill_ins\">Item Type</th>\r\n                    <th id=\"slectbill_ins\">Dose</th>\r\n                    <th id=\"slectbill_ins\">Route</th>\r\n                    <th id=\"slectbill_ins\">Frequency</th>\r\n                    <th id=\"slectbill_ins\">Duration</th>\r\n                    <th id=\"slectbill_ins\">Qty</th>\r\n                    <th id=\"slectbill_ins\">Instruction</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {prescriptions.map((issuedinfo, index) => (\r\n                    <tr key={index}>\r\n                      <td>{issuedinfo.GenericName}</td>\r\n                      <td>{issuedinfo.ItemName}</td>\r\n                      <td>{issuedinfo.Itemtype}</td>\r\n                      <td>{issuedinfo.Dose}</td>\r\n                      <td>{issuedinfo.Route}</td>\r\n                      <td>{issuedinfo.Frequency}</td>\r\n                      <td>{`${issuedinfo.DurationNumber} ${issuedinfo.DurationUnit}`}</td>\r\n                      <td>{issuedinfo.Qty}</td>\r\n                      <td>{issuedinfo.Instruction}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <div className=\"Add_items_Purchase_Master\">\r\n        <span>No Medicine Issued</span>\r\n      </div>\r\n    )}\r\n  </>\r\n)}\r\n\r\n        <ConfirmationModal\r\n          message=\"Do you want to continue?\"\r\n          onConfirm={handleConfirm}\r\n          onCancel={handleCancel}\r\n        />\r\n      )} */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prescription;\r\n\r\n\r\n"],"names":["Prescription","toast","useSelector","state","_state$userRecord","userRecord","_state$userRecord2","UserData","DoctorWorkbenchNavigation","_state$Frontoffice","Frontoffice","UrlLink","_state$userRecord3","type","setType","useState","formDataPrescription","setFormDataPrescription","GenericName","ItemName","dose","route","qty","instruction","frequency","durationNumber","durationUnit","itemtype","dispatchvalue","useDispatch","selectedMedicines","setSelectedMedicines","issuedmedicine","setIssuedmedicine","prevmedicine","setPrevmedicine","editIndex","setEditIndex","genericName","setgenericName","useEffect","axios","get","concat","then","response","console","log","data","catch","error","IsViewMode","setIsViewMode","params","RegistrationId","pk","res","ress","err","handleChange","e","name","value","target","filter","p","Generic_Name","map","item","prev","Item_Type","Dosage","includes","prevData","morning","afternoon","night","split","times1","parseInt","times","_jsx","className","children","_jsxs","style","width","display","placeItems","ToggleButtonGroup","exclusive","onChange","handlePageChange","event","newType","ToggleButton","height","backgroundColor","_Fragment","Object","keys","length","entries","_ref","createdBy","prescriptions","id","issuedinfo","index","Itemtype","Dose","Route","Frequency","DurationNumber","DurationUnit","Qty","Instruction","onClick","addprevmedicine","summa","prevMedicine","AddIcon","htmlFor","list","autoComplete","rows","disabled","readOnly","updateMedicine","updatedMedicines","addMedicine","medicineData","some","medicine","message","medicineInfo","selectedMedicine","handleEditMedicine","EditIcon","_","i","handleDeleteMedicine","DeleteIcon","handleClear","handleSubmitButtonClick","dataToSend","created_by","username","duration","Doctor_id","DoctorName","post","duplicate_item_names","duplicateItems","join","tdata","ToastAlert","Message","Type","_ref2"],"sourceRoot":""}